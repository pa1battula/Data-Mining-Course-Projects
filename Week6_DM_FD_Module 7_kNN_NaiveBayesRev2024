{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPxiLaNudF00XoKtLgTyBJ2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"8ba13115a53a4d3f98d573bd7facd4ac":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_14e6b6e2e858496086f4dd01613224c2","IPY_MODEL_30c0ea6c11e94e88bae493ac475dc830","IPY_MODEL_519c0d22db8b4e17b54ad38056386b21"],"layout":"IPY_MODEL_5e93e7feca224675b44c31df182b5026"}},"14e6b6e2e858496086f4dd01613224c2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f262376bbee64a7086817bcaeb9d59cc","placeholder":"​","style":"IPY_MODEL_e3dde2976ce7468ead034d70dcf36f30","value":"Summarize dataset: 100%"}},"30c0ea6c11e94e88bae493ac475dc830":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f2aebea907604fe3b0c0f68b180762a5","max":5,"min":0,"orientation":"horizontal","style":"IPY_MODEL_fa4966854935426aa78199b3ac8a9cb7","value":5}},"519c0d22db8b4e17b54ad38056386b21":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b50bf0696c984284a7a03938597f5553","placeholder":"​","style":"IPY_MODEL_c7beba8adb3b4e35a00bba09a388ea6f","value":" 40/40 [00:15&lt;00:00,  1.75it/s, Completed]"}},"5e93e7feca224675b44c31df182b5026":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f262376bbee64a7086817bcaeb9d59cc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e3dde2976ce7468ead034d70dcf36f30":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f2aebea907604fe3b0c0f68b180762a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fa4966854935426aa78199b3ac8a9cb7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b50bf0696c984284a7a03938597f5553":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c7beba8adb3b4e35a00bba09a388ea6f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"55e2b4952b9946b2acf96d6a9cdf1506":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b5d70a7a90114a33bee31fa8142cc25d","IPY_MODEL_6c0b682554034774a34f551bae881235","IPY_MODEL_62f2fb3935ff41048cd99cde818daea4"],"layout":"IPY_MODEL_f4521b8c71b6478e9a1d6a1345316484"}},"b5d70a7a90114a33bee31fa8142cc25d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_993eea39534f46bb8349595486518322","placeholder":"​","style":"IPY_MODEL_6f83e5de3f0e45eda8b77737e855dfbe","value":"Generate report structure: 100%"}},"6c0b682554034774a34f551bae881235":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d372a6b714ad47ce93ee913cdc310ab3","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_46b61d7e5cd449c0852e5bd7ba35a2b0","value":1}},"62f2fb3935ff41048cd99cde818daea4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d491656dfb9a4ebf97a80cec5e1b4e8b","placeholder":"​","style":"IPY_MODEL_8522e9dcadca486d9a81a017b0810813","value":" 1/1 [00:08&lt;00:00,  8.28s/it]"}},"f4521b8c71b6478e9a1d6a1345316484":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"993eea39534f46bb8349595486518322":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6f83e5de3f0e45eda8b77737e855dfbe":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d372a6b714ad47ce93ee913cdc310ab3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46b61d7e5cd449c0852e5bd7ba35a2b0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d491656dfb9a4ebf97a80cec5e1b4e8b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8522e9dcadca486d9a81a017b0810813":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c091656301a14493a8d82710f53f2c6b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e93ff2f2860e4e5ba57cff2692752004","IPY_MODEL_54916ada6f80469f9881d62a4803270f","IPY_MODEL_9634f98ea4aa41f7a016aab93e77250a"],"layout":"IPY_MODEL_999ff0facc9d4199b82e2eebc206a1f6"}},"e93ff2f2860e4e5ba57cff2692752004":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8fe2e20cb8e5432aac4ecec424dc9105","placeholder":"​","style":"IPY_MODEL_92ff5407bda945e085fc202dffd6432d","value":"Render HTML: 100%"}},"54916ada6f80469f9881d62a4803270f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0c29eec5e1ce49aaaa19c275ef382079","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9b5556700ea0426db371aa52a1f1eeab","value":1}},"9634f98ea4aa41f7a016aab93e77250a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_48009474b66748cca99c76217e42d200","placeholder":"​","style":"IPY_MODEL_7777c9be025c479d9bb42e0ddbf8f33f","value":" 1/1 [00:03&lt;00:00,  3.37s/it]"}},"999ff0facc9d4199b82e2eebc206a1f6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8fe2e20cb8e5432aac4ecec424dc9105":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"92ff5407bda945e085fc202dffd6432d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0c29eec5e1ce49aaaa19c275ef382079":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9b5556700ea0426db371aa52a1f1eeab":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"48009474b66748cca99c76217e42d200":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7777c9be025c479d9bb42e0ddbf8f33f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":29,"metadata":{"id":"O60MpWhEoLSf","executionInfo":{"status":"ok","timestamp":1712963510750,"user_tz":300,"elapsed":803,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}}},"outputs":[],"source":["# Import the regular libraries.\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from scipy import spatial\n","import statsmodels.api as sm\n","\n","# Import the k nearest neighbor libraries.\n","from sklearn.neighbors import KNeighborsClassifier\n","import matplotlib.patches as mpatches\n","from sklearn import neighbors, datasets\n","from sklearn.model_selection import cross_val_score, train_test_split\n","%matplotlib inline\n","\n","# Import the analysis libraries.\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import ConfusionMatrixDisplay\n","\"\"\"from sklearn.metrics import plot_confusion_matrix\"\"\"\n","from sklearn.metrics import classification_report\n","\n","# Import the naive bayes libraries.\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.metrics import accuracy_score\n","amazon = pd.read_csv(\"https://raw.githubusercontent.com/pa1battula/PavanKumarbattula_IT533/517eed26c7a9e08044fd34f8bd7528ec24cbc8e5/Amazon_toy.csv\", encoding=\"ISO-8859-1\")  #USE YOUR OWN GITHUB LINK\n","amazon.dropna(inplace=True)"]},{"cell_type":"code","source":["amazon.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"Dln-1H3stell","executionInfo":{"status":"ok","timestamp":1712963579021,"user_tz":300,"elapsed":443,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"a141c378-b8c0-4b4e-f89a-0e36658cb6fb"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             uniq_id  \\\n","4   7b72f597db5d74d35c4f91ef69708cf1   \n","35  6bd0e7b1dcc0e511dd5cced0bd8d26b6   \n","58  ee1ef4e5f77e64632ea5326470a2f336   \n","83  240d68bde9dd4c5d7301001e2de69333   \n","84  abdc79186ffdd5ca7c23fec146f9a7da   \n","\n","                                         product_name  \\\n","4   4 Packs of Mini Colouring Pencils (4 pencils i...   \n","35  30th Birthday Black and Silver Confetti Table Dec   \n","58            12ft Lime Green Polka Dot Bunting Flags   \n","83     Loom Bandz - Rainbow Colours - White 600 Count   \n","84  Disney Princess Sparkle Happy Birthday Foil Ba...   \n","\n","                manufacturer  price  number_available_in_stock status  \\\n","4   unisex party bag fillers   0.60                          7    new   \n","35                  Eurowrap   1.00                         10    new   \n","58              Unique Party   1.13                         42    new   \n","83                Loom Bands   1.19                          2    new   \n","84           Disney Princess   1.20                         13    new   \n","\n","    number_of_reviews  number_of_answered_questions  \\\n","4                  21                             1   \n","35                 17                             1   \n","58                151                             1   \n","83                518                             1   \n","84                 12                             1   \n","\n","    average_review_rating_of_5  \\\n","4                          4.3   \n","35                         4.2   \n","58                         4.6   \n","83                         4.5   \n","84                         4.6   \n","\n","                     amazon_category_and_sub_category  \\\n","4                   Arts & Crafts > Colouring Pencils   \n","35  Party Supplies > Banners, Stickers & Confetti ...   \n","58  Party Supplies > Banners, Stickers & Confetti ...   \n","83  Arts & Crafts > Children's Craft Kits > Bead A...   \n","84                Characters & Brands > Disney > Toys   \n","\n","           customers_who_bought_this_item_also_bought  \\\n","4   http://www.amazon.co.uk/12-Mini-Christmas-Colo...   \n","35  http://www.amazon.co.uk/Glitz-Black-Silver-Bir...   \n","58  http://www.amazon.co.uk/Latex-Lime-Green-Polka...   \n","83  http://www.amazon.co.uk/Loom-Bandz-Rainbow-Col...   \n","84  http://www.amazon.co.uk/Disney-Princess-Glamou...   \n","\n","                                          description  \\\n","4   4 x Mini Colouring Pencils - Pack of 4 Size: 8...   \n","35  This 14gram bag of table confetti is in black ...   \n","58  Colour Name:Lime Green ?|? Item Package Quanti...   \n","83           Manufacturer's Description not available   \n","84           Manufacturer's Description not available   \n","\n","                                  product_information  \\\n","4   Technical Details Item Weight59 g Product Dime...   \n","35  Technical Details Item Weight9 g Product Dimen...   \n","58  Technical Details Item Weight45 g Product Dime...   \n","83  Technical Details Item Weight41 g Product Dime...   \n","84  Technical Details Manufacturer recommended age...   \n","\n","                                  product_description  \\\n","4   4 x Mini Colouring Pencils - Pack of 4 Size: 8...   \n","35  This 14gram bag of table confetti is in black ...   \n","58  Colour Name:Lime Green ?|? Item Package Quanti...   \n","83                                      Not available   \n","84                                      Not available   \n","\n","          items_customers_buy_after_viewing_this_item  \\\n","4   http://www.amazon.co.uk/20-Packs-Wax-Crayons-P...   \n","35  http://www.amazon.co.uk/Black-Silver-Birthday-...   \n","58  http://www.amazon.co.uk/Latex-Lime-Green-Polka...   \n","83  http://www.amazon.co.uk/White-Color-RUBBER-BRA...   \n","84  http://www.amazon.co.uk/Disney-Princess-Sparkl...   \n","\n","                       customer_questions_and_answers  \\\n","4   How many packs in the box. // I got four Mimi ...   \n","35  how quick will these be delivered? I need them...   \n","58  Are they one sided or double,  what is the dis...   \n","83  How much is the postage fee? // Hi,Thanks for ...   \n","84  does this banner have four lots of happy birth...   \n","\n","                                     customer_reviews  \n","4   Well made and presented // 4.0 // 6 April 2015...  \n","35  ok // 3.0 // 22 July 2013 // By\\n    \\n    MRS...  \n","58  pink bunting // 4.0 // 14 Sept. 2013 // By\\n  ...  \n","83  Very Disappointed // 1.0 // 19 July 2014 // By...  \n","84  Very Slow Delivery- missed occasion it was mea...  "],"text/html":["\n","  <div id=\"df-860da965-628e-42a4-937e-65d1ed88ef4b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>uniq_id</th>\n","      <th>product_name</th>\n","      <th>manufacturer</th>\n","      <th>price</th>\n","      <th>number_available_in_stock</th>\n","      <th>status</th>\n","      <th>number_of_reviews</th>\n","      <th>number_of_answered_questions</th>\n","      <th>average_review_rating_of_5</th>\n","      <th>amazon_category_and_sub_category</th>\n","      <th>customers_who_bought_this_item_also_bought</th>\n","      <th>description</th>\n","      <th>product_information</th>\n","      <th>product_description</th>\n","      <th>items_customers_buy_after_viewing_this_item</th>\n","      <th>customer_questions_and_answers</th>\n","      <th>customer_reviews</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>7b72f597db5d74d35c4f91ef69708cf1</td>\n","      <td>4 Packs of Mini Colouring Pencils (4 pencils i...</td>\n","      <td>unisex party bag fillers</td>\n","      <td>0.60</td>\n","      <td>7</td>\n","      <td>new</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>4.3</td>\n","      <td>Arts &amp; Crafts &gt; Colouring Pencils</td>\n","      <td>http://www.amazon.co.uk/12-Mini-Christmas-Colo...</td>\n","      <td>4 x Mini Colouring Pencils - Pack of 4 Size: 8...</td>\n","      <td>Technical Details Item Weight59 g Product Dime...</td>\n","      <td>4 x Mini Colouring Pencils - Pack of 4 Size: 8...</td>\n","      <td>http://www.amazon.co.uk/20-Packs-Wax-Crayons-P...</td>\n","      <td>How many packs in the box. // I got four Mimi ...</td>\n","      <td>Well made and presented // 4.0 // 6 April 2015...</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>6bd0e7b1dcc0e511dd5cced0bd8d26b6</td>\n","      <td>30th Birthday Black and Silver Confetti Table Dec</td>\n","      <td>Eurowrap</td>\n","      <td>1.00</td>\n","      <td>10</td>\n","      <td>new</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>4.2</td>\n","      <td>Party Supplies &gt; Banners, Stickers &amp; Confetti ...</td>\n","      <td>http://www.amazon.co.uk/Glitz-Black-Silver-Bir...</td>\n","      <td>This 14gram bag of table confetti is in black ...</td>\n","      <td>Technical Details Item Weight9 g Product Dimen...</td>\n","      <td>This 14gram bag of table confetti is in black ...</td>\n","      <td>http://www.amazon.co.uk/Black-Silver-Birthday-...</td>\n","      <td>how quick will these be delivered? I need them...</td>\n","      <td>ok // 3.0 // 22 July 2013 // By\\n    \\n    MRS...</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>ee1ef4e5f77e64632ea5326470a2f336</td>\n","      <td>12ft Lime Green Polka Dot Bunting Flags</td>\n","      <td>Unique Party</td>\n","      <td>1.13</td>\n","      <td>42</td>\n","      <td>new</td>\n","      <td>151</td>\n","      <td>1</td>\n","      <td>4.6</td>\n","      <td>Party Supplies &gt; Banners, Stickers &amp; Confetti ...</td>\n","      <td>http://www.amazon.co.uk/Latex-Lime-Green-Polka...</td>\n","      <td>Colour Name:Lime Green ?|? Item Package Quanti...</td>\n","      <td>Technical Details Item Weight45 g Product Dime...</td>\n","      <td>Colour Name:Lime Green ?|? Item Package Quanti...</td>\n","      <td>http://www.amazon.co.uk/Latex-Lime-Green-Polka...</td>\n","      <td>Are they one sided or double,  what is the dis...</td>\n","      <td>pink bunting // 4.0 // 14 Sept. 2013 // By\\n  ...</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>240d68bde9dd4c5d7301001e2de69333</td>\n","      <td>Loom Bandz - Rainbow Colours - White 600 Count</td>\n","      <td>Loom Bands</td>\n","      <td>1.19</td>\n","      <td>2</td>\n","      <td>new</td>\n","      <td>518</td>\n","      <td>1</td>\n","      <td>4.5</td>\n","      <td>Arts &amp; Crafts &gt; Children's Craft Kits &gt; Bead A...</td>\n","      <td>http://www.amazon.co.uk/Loom-Bandz-Rainbow-Col...</td>\n","      <td>Manufacturer's Description not available</td>\n","      <td>Technical Details Item Weight41 g Product Dime...</td>\n","      <td>Not available</td>\n","      <td>http://www.amazon.co.uk/White-Color-RUBBER-BRA...</td>\n","      <td>How much is the postage fee? // Hi,Thanks for ...</td>\n","      <td>Very Disappointed // 1.0 // 19 July 2014 // By...</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>abdc79186ffdd5ca7c23fec146f9a7da</td>\n","      <td>Disney Princess Sparkle Happy Birthday Foil Ba...</td>\n","      <td>Disney Princess</td>\n","      <td>1.20</td>\n","      <td>13</td>\n","      <td>new</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>4.6</td>\n","      <td>Characters &amp; Brands &gt; Disney &gt; Toys</td>\n","      <td>http://www.amazon.co.uk/Disney-Princess-Glamou...</td>\n","      <td>Manufacturer's Description not available</td>\n","      <td>Technical Details Manufacturer recommended age...</td>\n","      <td>Not available</td>\n","      <td>http://www.amazon.co.uk/Disney-Princess-Sparkl...</td>\n","      <td>does this banner have four lots of happy birth...</td>\n","      <td>Very Slow Delivery- missed occasion it was mea...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-860da965-628e-42a4-937e-65d1ed88ef4b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-860da965-628e-42a4-937e-65d1ed88ef4b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-860da965-628e-42a4-937e-65d1ed88ef4b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5d57c6a5-df5c-410c-a5eb-887f3eb9603a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d57c6a5-df5c-410c-a5eb-887f3eb9603a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5d57c6a5-df5c-410c-a5eb-887f3eb9603a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"amazon","summary":"{\n  \"name\": \"amazon\",\n  \"rows\": 676,\n  \"fields\": [\n    {\n      \"column\": \"uniq_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 676,\n        \"samples\": [\n          \"da849c9d7731f65302f8eca42f8fb025\",\n          \"534b80771bef77cdbb6e26251f321d36\",\n          \"dd4019b2c06c17494f0aa4fa4be7f74c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 674,\n        \"samples\": [\n          \"CHIC 2000 Bayer Carlotta Rocking Musical Pony\",\n          \"The Puppet Company - Long Sleeves - Pig Hand Puppet\",\n          \"Playmobil 6001 Hawk Knight's Castle\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"manufacturer\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 351,\n        \"samples\": [\n          \"BLO pens\",\n          \"Barbie\",\n          \"Wizards of the Coast\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59.003054135804014,\n        \"min\": 0.6,\n        \"max\": 995.11,\n        \"num_unique_values\": 468,\n        \"samples\": [\n          4.25,\n          4.99,\n          2.94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_available_in_stock\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 86,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          7,\n          19,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"used\",\n          \"new\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 75,\n        \"min\": 1,\n        \"max\": 1040,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          47,\n          379\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_answered_questions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 54,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          1,\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_review_rating_of_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32359973300576533,\n        \"min\": 3.3,\n        \"max\": 5.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          4.0,\n          3.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amazon_category_and_sub_category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 107,\n        \"samples\": [\n          \"Hobbies > Trading Cards & Accessories > Single Cards\",\n          \"Games > Card Games\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customers_who_bought_this_item_also_bought\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 672,\n        \"samples\": [\n          \"http://www.amazon.co.uk/Playmobil-5496-Advent-Calendar-Christmas/dp/B00IF1W4KK | http://www.amazon.co.uk/Playmobil-5497-Christmas-Calendar-Animals/dp/B00IF1W7NE | http://www.amazon.co.uk/Playmobil-5492-Christmas-Calendar-Fairyland/dp/B00B3QT7JU | http://www.amazon.co.uk/Playmobil-5493-Christmas-Calendar-Treasure/dp/B00B3QT8FS | http://www.amazon.co.uk/Playmobil-5976-Father-Christmas-Santas/dp/B00CFOD9OS | http://www.amazon.co.uk/LEGO-City-60099-Advent-Calendar/dp/B00SDTYX2Q\",\n          \"http://www.amazon.co.uk/Thomas-Friends-Wooden-Railway-Engine/dp/B009K4E4ZE | http://www.amazon.co.uk/Thomas-Friends-Wooden-Railway-Engine/dp/B009K4E6KW | http://www.amazon.co.uk/Thomas-Friends-Railway-Clarabel-Engines/dp/B00A6SNO2M | http://www.amazon.co.uk/Thomas-Friends-Wooden-Railway-Engine/dp/B009K4E6X4 | http://www.amazon.co.uk/Thomas-Friends-Wooden-Railway-Engine/dp/B009K4E4PE | http://www.amazon.co.uk/Thomas-Friends-Wooden-Railway-Gordon/dp/B009K4E77O\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 647,\n        \"samples\": [\n          \"Bachmann Thomas & Friends Large Scale Deluxe Thomas The Tank Engine (G Scale) Thomas & Friends appeared in a series of children's books in the 1940s, and have delighted children and adults alike ever since.? In 1984 Thomas & Friends appeared for the first time on British television and made an immediate hit - becoming an even greater favourite with the younger fan. The Hornby Thomas & Friends range includes and exciting and colourful selection of locomotives, coaches, wagons and buildings.\",\n          \"Suitable for the following scale(s): HO Scale\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_information\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 675,\n        \"samples\": [\n          \"Technical Details Item Weight1.1 Kg Product Dimensions37.6 x 26.6 x 6 cm Manufacturer recommended age:3 years and up Item model number10242 Assembly RequiredNo Batteries Required?No Batteries Included?No ?? Additional Information ASINB00ZTPISCS Customer Reviews amznJQ.onReady('popover', function() { (function($) { if($.fn.acrPopover) return; var popoverConfig = { showOnHover:true, showCloseButton: \\\"ontouchstart\\\" in document.documentElement, width: null, location:'bottom', locationAlign:'left', locationOffset:[-20,0], group: 'reviewsPopover', clone:false, hoverHideDelay:300 }; $.fn.acrPopover = function() { return this.each(function() { var $this = $(this); if(!$this.data('init') && typeof $this.amazonPopoverTrigger === 'function') { $this.data('init', 1); var ajaxURL = '/gp/customer-reviews/common/du/displayHistoPopAjax.html?' + '&ASIN=' + $this.attr('name') + '&link=1' + '&seeall=1' + '&ref=' + $this.attr('ref'); var myConfig = $.extend(true, { destination: ajaxURL }, popoverConfig); $this.amazonPopoverTrigger(myConfig); } }); }; window.reviewHistPopoverConfig = popoverConfig; var jqInit = window.jQueryInitHistoPopovers = function(asin) { if (typeof $('.acr-popover[name=' + asin + ']').acrPopover === 'function') { $('.acr-popover[name=' + asin + ']').acrPopover(); } }; window.doInit_average_customer_reviews = jqInit; window.onAjaxUpdate_average_customer_reviews = jqInit; window.onCacheUpdate_average_customer_reviews = jqInit; window.onCacheUpdateReselect_average_customer_reviews = jqInit; amznJQ.onCompletion('amznJQ.criticalFeature', function() { setTimeout(function() { amznJQ.declareAvailable('acrPopover'); }, 10); }); })(jQuery); }); amznJQ.onReady('acrPopover', function() { jQuery('.acr-popover').each(function() { if (typeof jQuery(this).acrPopover === 'function') { jQuery(this).acrPopover(); } }); }); 4.2 out of 5 stars See all reviews 39 reviews 4.2 out of 5 stars Best Sellers Rank 9,521 in Toys & Games (See top 100) #30 in?Toys & Games > Arts & Crafts > Art Sand Shipping Weight1.1 Kg Delivery Destinations:Visit the Delivery Destinations Help page to see where this item can be delivered. Date First Available17 Jun. 2015 ?? Feedback ?Would you like to update product info or give feedback on images?\",\n          \"Technical Details Item Weight141 g Product Dimensions38.1 x 20.3 x 38.1 cm Manufacturer recommended age:3 years and up Item model numberPC006025 Assembly RequiredNo Batteries Required?No Material Type(s)Jacquard Material Composition100% Fabric Colormulticoloured ?? Additional Information ASINB000KJZ8EO Customer Reviews amznJQ.onReady('popover', function() { (function($) { if($.fn.acrPopover) return; var popoverConfig = { showOnHover:true, showCloseButton: \\\"ontouchstart\\\" in document.documentElement, width: null, location:'bottom', locationAlign:'left', locationOffset:[-20,0], group: 'reviewsPopover', clone:false, hoverHideDelay:300 }; $.fn.acrPopover = function() { return this.each(function() { var $this = $(this); if(!$this.data('init') && typeof $this.amazonPopoverTrigger === 'function') { $this.data('init', 1); var ajaxURL = '/gp/customer-reviews/common/du/displayHistoPopAjax.html?' + '&ASIN=' + $this.attr('name') + '&link=1' + '&seeall=1' + '&ref=' + $this.attr('ref'); var myConfig = $.extend(true, { destination: ajaxURL }, popoverConfig); $this.amazonPopoverTrigger(myConfig); } }); }; window.reviewHistPopoverConfig = popoverConfig; var jqInit = window.jQueryInitHistoPopovers = function(asin) { if (typeof $('.acr-popover[name=' + asin + ']').acrPopover === 'function') { $('.acr-popover[name=' + asin + ']').acrPopover(); } }; window.doInit_average_customer_reviews = jqInit; window.onAjaxUpdate_average_customer_reviews = jqInit; window.onCacheUpdate_average_customer_reviews = jqInit; window.onCacheUpdateReselect_average_customer_reviews = jqInit; amznJQ.onCompletion('amznJQ.criticalFeature', function() { setTimeout(function() { amznJQ.declareAvailable('acrPopover'); }, 10); }); })(jQuery); }); amznJQ.onReady('acrPopover', function() { jQuery('.acr-popover').each(function() { if (typeof jQuery(this).acrPopover === 'function') { jQuery(this).acrPopover(); } }); }); 5.0 out of 5 stars See all reviews 8 reviews 5.0 out of 5 stars Best Sellers Rank 41,715 in Toys & Games (See top 100) #85 in?Toys & Games > Puppets & Puppet Theatres > Hand Puppets Shipping Weight141 g Delivery Destinations:Visit the Delivery Destinations Help page to see where this item can be delivered. Date First Available27 Nov. 2006 ??\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 647,\n        \"samples\": [\n          \"Bachmann Thomas & Friends Large Scale Deluxe Thomas The Tank Engine (G Scale) Thomas & Friends appeared in a series of children's books in the 1940s, and have delighted children and adults alike ever since.? In 1984 Thomas & Friends appeared for the first time on British television and made an immediate hit - becoming an even greater favourite with the younger fan. The Hornby Thomas & Friends range includes and exciting and colourful selection of locomotives, coaches, wagons and buildings.\",\n          \"Suitable for the following scale(s): HO Scale\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"items_customers_buy_after_viewing_this_item\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 566,\n        \"samples\": [\n          \"http://www.amazon.co.uk/LEGO-42042-Technic-Crawler-Crane/dp/B00SDTS37M | http://www.amazon.co.uk/LEGO-Technic-8293-Power-Functions/dp/B0014QXN08 | http://www.amazon.co.uk/LEGO-Technic-42043-Mercedes-Benz-Arocs/dp/B00SDTS2CS | http://www.amazon.co.uk/LEGO-Technic-42039-Hours-Race/dp/B00NVDJQ3A\",\n          \"http://www.amazon.co.uk/Hornby-R1151-Caledonian | http://www.amazon.co.uk/Hornby-R8222-Gauge-Track-Extension/dp/B000RK3FZK | http://www.amazon.co.uk/Hornby-R3064-RailRoad-Smokey-Locomotive | http://www.amazon.co.uk/Hornby-Hobbies-Santa-Express-Train/dp/B016WP3RYM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_questions_and_answers\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 672,\n        \"samples\": [\n          \"what is the model length? // Hiya it's 6.5 inches long 3 inches wide and just under 2 inches high(sorry i'm still in feet and inches !) very well detailed model recommend it. Gary. | are wheels rotating? // Yes!\",\n          \"is this suitable for YuGiOh cards? // Yes YuGiOh cards can be held in the deck box and sleeves. | Are these different sleeves to the Pro-matte black ones ? // My sleeves were the pro matt black ones | Would these fit 60 a game of thrones 2ed lcg sleeved & the tokens that come with the core set? // It was capable for fitting about 100 MTG cards, with generic card protectors, so I suspect that it should fit any standardly shaped trading cards and card covers. | roughly how many cards (with sleeves) will the box fit? // 80 | Will this fit the d&d spell cards (the ad&d 2E and the 5E cards)? Thanks // Yes. These are good quality. Worth getting. Regards | Do these fit Pokemon cards and do they have the silver logo on them? // They have white writing and Hughes cards fit in them so I believe pokemon cards will fit too.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_reviews\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 674,\n        \"samples\": [\n          \"Easy to build and it looks solid // 5.0 // 17 Mar. 2015 // By\\n    \\n    caroline\\n  \\n on 17 Mar. 2015 // Absolutely cute and worth the price! Our little girl loves it!!!Easy to build and it looks solid. It would be great if you could change the volume as it is rather loud.I would buy it again and rate it with five stars! | We were delighted with the rocking horse as was our grandson // 5.0 // 26 Aug. 2015 // By\\n    \\n    janet\\n  \\n on 26 Aug. 2015 // We were delighted with the rocking horse as was our grandson. A wonderful gift. All as described and fast delivery. Would recommend this item. | well made sturdy and a lovely gift // 5.0 // 29 Mar. 2015 // By\\n    \\n    Kerry Jones\\n  \\n on 29 Mar. 2015 // fabulous...well made sturdy and a lovely gift. | it was easy to put together // 4.0 // 24 Jan. 2016 // By\\n    \\n    syd\\n  \\n on 24 Jan. 2016 // My Granddaughter loves it; it was easy to put together; the only criticism is with the \\\"saddle\\\" and \\\"stirrups\\\"; they are rather flimsy and the stirrups need footwear to be worn, really I'm nit picking as for the money can't really grumble and it does appear to be robust, my Granddaughter gave it a good work out over the festive period and hasn't broken it (yet) | Four Stars // 4.0 // 17 Dec. 2015 // By\\n    \\n    Melanie Nabi\\n  \\n on 17 Dec. 2015 // Good value for money, toddler loves\",\n          \"Easy to 'bring to life' // 5.0 // 30 May 2009 // By\\n    \\n    K Wren\\n  \\nHALL OF FAMETOP 50 REVIEWERVINE VOICE on 30 May 2009 // I've been very impressed with the quality of this range of puppets - which is not conveyed by the photos. They are very well made from quality plush fabric and are surprisingly life-like with good features.Although targetted at children they can also be used by adults - my hand is 19cm long and I can use it comfortably with a thumb and finger fingers inserted into the paws and two fingers operating the mouth.This range by The Puppet Company will not disappoint an adult or child looking to have a bit of fun! | A lovely birthday present for our granddaughter // 5.0 // 16 Aug. 2013 // By\\n    \\n    Mr M Downing\\n  \\n on 16 Aug. 2013 // Our 4-year-old granddaughter loves role play, so we decided to buy her glove puppets for her birthday - this and the wolf puppet. She was absolutely delighted with them, and what pleased us most was that we could wear them too, they're so roomy! Not only that, they're really well made and should last for ages. All in all, excellent value for money!My wife and I have no reservations in recommending this item to anyone else who's thinking of buying a glove puppet. | We called him Kevin. // 5.0 // 11 Mar. 2015 // By\\n    \\n    Danny Darko\\n  \\n on 11 Mar. 2015 // Excellent quality, as are all of the Puppet Company toys. Keeping our daughter easily entertained; Kevin Bacon here goes very well with the wolf puppet we already had (Winston Wolf ?? he solves problems). | A great quality puppet. // 5.0 // 18 Mar. 2012 // By\\n    \\n    Kserasera\\n  \\n on 18 Mar. 2012 // We bought it as a back up to my daughter's favourite puppet.. and she likes them equally as much.  This item is very well made and very cute with a lot of attention to detail.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["amazon1 = pd.DataFrame(amazon, columns =['price','number_available_in_stock','number_of_reviews', 'number_of_answered_questions', 'average_review_rating_of_5', 'status' ] )"],"metadata":{"id":"5QPsHIBSuLHx","executionInfo":{"status":"ok","timestamp":1712963521708,"user_tz":300,"elapsed":362,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["amazon1.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S6fQfgWcwRAN","executionInfo":{"status":"ok","timestamp":1712963523145,"user_tz":300,"elapsed":250,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"ac21b6d1-d7e5-4d07-9e0b-8e3e316ff579"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['price', 'number_available_in_stock', 'number_of_reviews',\n","       'number_of_answered_questions', 'average_review_rating_of_5', 'status'],\n","      dtype='object')"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["amazon1.status.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XLIgNftaLcWD","executionInfo":{"status":"ok","timestamp":1712963524426,"user_tz":300,"elapsed":6,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"14637b5c-fafa-45b8-a288-1844d3363fc3"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['new', 'used'], dtype=object)"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["amazon1.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G9oPOZ2kuPV1","executionInfo":{"status":"ok","timestamp":1712963533773,"user_tz":300,"elapsed":153,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"fc8f0483-f02b-467a-dac3-accd00e7cdb5"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(676, 6)"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["# Installing the ydata-profiling package with Jupyter Notebook and unicode support\n","\n","!pip install -U ydata-profiling[notebook,unicode]\n","\n","# NOTE: After the installation, you will see a grey button at the end of the installation log that asks you to restart the runtime environment.\n","# Hit this button and then re-run the code up to here."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yhYijHBP-5s8","executionInfo":{"status":"ok","timestamp":1712962641971,"user_tz":300,"elapsed":55839,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"117260ef-54c6-4316-c7d2-272a55c6f097"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting ydata-profiling[notebook,unicode]\n","  Downloading ydata_profiling-4.7.0-py2.py3-none-any.whl (357 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m357.9/357.9 kB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: scipy<1.12,>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (1.11.4)\n","Requirement already satisfied: pandas!=1.4.0,<3,>1.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (2.0.3)\n","Requirement already satisfied: matplotlib<3.9,>=3.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (3.7.1)\n","Requirement already satisfied: pydantic>=2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (2.6.4)\n","Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (6.0.1)\n","Requirement already satisfied: jinja2<3.2,>=2.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (3.1.3)\n","Collecting visions[type_image_path]<0.7.7,>=0.7.5 (from ydata-profiling[notebook,unicode])\n","  Downloading visions-0.7.6-py3-none-any.whl (104 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m104.8/104.8 kB\u001b[0m \u001b[31m8.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy<2,>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (1.25.2)\n","Collecting htmlmin==0.1.12 (from ydata-profiling[notebook,unicode])\n","  Downloading htmlmin-0.1.12.tar.gz (19 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting phik<0.13,>=0.11.1 (from ydata-profiling[notebook,unicode])\n","  Downloading phik-0.12.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (686 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m686.1/686.1 kB\u001b[0m \u001b[31m25.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: requests<3,>=2.24.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (2.31.0)\n","Requirement already satisfied: tqdm<5,>=4.48.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (4.66.2)\n","Collecting seaborn<0.13,>=0.10.1 (from ydata-profiling[notebook,unicode])\n","  Downloading seaborn-0.12.2-py3-none-any.whl (293 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m293.3/293.3 kB\u001b[0m \u001b[31m13.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting multimethod<2,>=1.4 (from ydata-profiling[notebook,unicode])\n","  Downloading multimethod-1.11.2-py3-none-any.whl (10 kB)\n","Requirement already satisfied: statsmodels<1,>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (0.14.1)\n","Collecting typeguard<5,>=4.1.2 (from ydata-profiling[notebook,unicode])\n","  Downloading typeguard-4.2.1-py3-none-any.whl (34 kB)\n","Collecting imagehash==4.3.1 (from ydata-profiling[notebook,unicode])\n","  Downloading ImageHash-4.3.1-py2.py3-none-any.whl (296 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m296.5/296.5 kB\u001b[0m \u001b[31m17.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: wordcloud>=1.9.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (1.9.3)\n","Collecting dacite>=1.8 (from ydata-profiling[notebook,unicode])\n","  Downloading dacite-1.8.1-py3-none-any.whl (14 kB)\n","Requirement already satisfied: numba<1,>=0.56.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (0.58.1)\n","Collecting tangled-up-in-unicode==0.2.0 (from ydata-profiling[notebook,unicode])\n","  Downloading tangled_up_in_unicode-0.2.0-py3-none-any.whl (4.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.7/4.7 MB\u001b[0m \u001b[31m34.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: jupyter-client>=5.3.4 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (6.1.12)\n","Requirement already satisfied: jupyter-core>=4.6.3 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (5.7.2)\n","Requirement already satisfied: ipywidgets>=7.5.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling[notebook,unicode]) (7.7.1)\n","Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling[notebook,unicode]) (1.6.0)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling[notebook,unicode]) (9.4.0)\n","Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (5.5.6)\n","Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.2.0)\n","Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (5.7.1)\n","Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (3.6.6)\n","Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (7.34.0)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (3.0.10)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2<3.2,>=2.11.1->ydata-profiling[notebook,unicode]) (2.1.5)\n","Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.10/dist-packages (from jupyter-client>=5.3.4->ydata-profiling[notebook,unicode]) (23.2.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.10/dist-packages (from jupyter-client>=5.3.4->ydata-profiling[notebook,unicode]) (2.8.2)\n","Requirement already satisfied: tornado>=4.1 in /usr/local/lib/python3.10/dist-packages (from jupyter-client>=5.3.4->ydata-profiling[notebook,unicode]) (6.3.3)\n","Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core>=4.6.3->ydata-profiling[notebook,unicode]) (4.2.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.9,>=3.2->ydata-profiling[notebook,unicode]) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.9,>=3.2->ydata-profiling[notebook,unicode]) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.9,>=3.2->ydata-profiling[notebook,unicode]) (4.51.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.9,>=3.2->ydata-profiling[notebook,unicode]) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.9,>=3.2->ydata-profiling[notebook,unicode]) (24.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.9,>=3.2->ydata-profiling[notebook,unicode]) (3.1.2)\n","Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba<1,>=0.56.0->ydata-profiling[notebook,unicode]) (0.41.1)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<3,>1.1->ydata-profiling[notebook,unicode]) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<3,>1.1->ydata-profiling[notebook,unicode]) (2024.1)\n","Requirement already satisfied: joblib>=0.14.1 in /usr/local/lib/python3.10/dist-packages (from phik<0.13,>=0.11.1->ydata-profiling[notebook,unicode]) (1.4.0)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata-profiling[notebook,unicode]) (0.6.0)\n","Requirement already satisfied: pydantic-core==2.16.3 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata-profiling[notebook,unicode]) (2.16.3)\n","Requirement already satisfied: typing-extensions>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata-profiling[notebook,unicode]) (4.11.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling[notebook,unicode]) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling[notebook,unicode]) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling[notebook,unicode]) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling[notebook,unicode]) (2024.2.2)\n","Requirement already satisfied: patsy>=0.5.4 in /usr/local/lib/python3.10/dist-packages (from statsmodels<1,>=0.13.2->ydata-profiling[notebook,unicode]) (0.5.6)\n","Requirement already satisfied: attrs>=19.3.0 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]<0.7.7,>=0.7.5->ydata-profiling[notebook,unicode]) (23.2.0)\n","Requirement already satisfied: networkx>=2.4 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]<0.7.7,>=0.7.5->ydata-profiling[notebook,unicode]) (3.3)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (67.7.2)\n","Collecting jedi>=0.16 (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode])\n","  Downloading jedi-0.19.1-py2.py3-none-any.whl (1.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m28.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (4.4.2)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.7.5)\n","Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (3.0.43)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (2.16.1)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.2.0)\n","Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.1.6)\n","Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (4.9.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.4->statsmodels<1,>=0.13.2->ydata-profiling[notebook,unicode]) (1.16.0)\n","Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (6.5.5)\n","Requirement already satisfied: parso<0.9.0,>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.8.4)\n","Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (23.1.0)\n","Requirement already satisfied: nbformat in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (5.10.4)\n","Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (6.5.4)\n","Requirement already satisfied: nest-asyncio>=1.5 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.6.0)\n","Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.8.3)\n","Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.18.1)\n","Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.20.0)\n","Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.0.0)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.7.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.2.13)\n","Requirement already satisfied: jupyter-server>=1.8 in /usr/local/lib/python3.10/dist-packages (from nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.24.0)\n","Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.10/dist-packages (from nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.2.4)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (4.9.4)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (4.12.3)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (6.1.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.7.1)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.4)\n","Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.3.0)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.8.4)\n","Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.10.0)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.5.1)\n","Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.2.1)\n","Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.10/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (2.19.1)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (4.19.2)\n","Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (21.2.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (2023.12.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.34.0)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.18.0)\n","Requirement already satisfied: anyio<4,>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (3.7.1)\n","Requirement already satisfied: websocket-client in /usr/local/lib/python3.10/dist-packages (from jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.7.0)\n","Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.16.0)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (2.5)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (0.5.1)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio<4,>=3.1.0->jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.3.1)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<4,>=3.1.0->jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (1.2.0)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.5.1->ydata-profiling[notebook,unicode]) (2.22)\n","Building wheels for collected packages: htmlmin\n","  Building wheel for htmlmin (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for htmlmin: filename=htmlmin-0.1.12-py3-none-any.whl size=27080 sha256=a14f469d1b81265e935ad9068c6dc9fa842d41b694791e1f434d0ba0a3ddf341\n","  Stored in directory: /root/.cache/pip/wheels/dd/91/29/a79cecb328d01739e64017b6fb9a1ab9d8cb1853098ec5966d\n","Successfully built htmlmin\n","Installing collected packages: htmlmin, typeguard, tangled-up-in-unicode, multimethod, jedi, dacite, imagehash, visions, seaborn, phik, ydata-profiling\n","  Attempting uninstall: seaborn\n","    Found existing installation: seaborn 0.13.1\n","    Uninstalling seaborn-0.13.1:\n","      Successfully uninstalled seaborn-0.13.1\n","Successfully installed dacite-1.8.1 htmlmin-0.1.12 imagehash-4.3.1 jedi-0.19.1 multimethod-1.11.2 phik-0.12.4 seaborn-0.12.2 tangled-up-in-unicode-0.2.0 typeguard-4.2.1 visions-0.7.6 ydata-profiling-4.7.0\n"]}]},{"cell_type":"code","source":["from ydata_profiling import ProfileReport # Now we load the package\n","# amazon1.profile_report()\n","profile = ProfileReport(amazon1, title=\"Amazon 1 Profiling Report\")\n","profile # And we call the package. This will take a moment. Prepare to be amazed!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":918,"referenced_widgets":["8ba13115a53a4d3f98d573bd7facd4ac","14e6b6e2e858496086f4dd01613224c2","30c0ea6c11e94e88bae493ac475dc830","519c0d22db8b4e17b54ad38056386b21","5e93e7feca224675b44c31df182b5026","f262376bbee64a7086817bcaeb9d59cc","e3dde2976ce7468ead034d70dcf36f30","f2aebea907604fe3b0c0f68b180762a5","fa4966854935426aa78199b3ac8a9cb7","b50bf0696c984284a7a03938597f5553","c7beba8adb3b4e35a00bba09a388ea6f","55e2b4952b9946b2acf96d6a9cdf1506","b5d70a7a90114a33bee31fa8142cc25d","6c0b682554034774a34f551bae881235","62f2fb3935ff41048cd99cde818daea4","f4521b8c71b6478e9a1d6a1345316484","993eea39534f46bb8349595486518322","6f83e5de3f0e45eda8b77737e855dfbe","d372a6b714ad47ce93ee913cdc310ab3","46b61d7e5cd449c0852e5bd7ba35a2b0","d491656dfb9a4ebf97a80cec5e1b4e8b","8522e9dcadca486d9a81a017b0810813","c091656301a14493a8d82710f53f2c6b","e93ff2f2860e4e5ba57cff2692752004","54916ada6f80469f9881d62a4803270f","9634f98ea4aa41f7a016aab93e77250a","999ff0facc9d4199b82e2eebc206a1f6","8fe2e20cb8e5432aac4ecec424dc9105","92ff5407bda945e085fc202dffd6432d","0c29eec5e1ce49aaaa19c275ef382079","9b5556700ea0426db371aa52a1f1eeab","48009474b66748cca99c76217e42d200","7777c9be025c479d9bb42e0ddbf8f33f"],"output_embedded_package_id":"1_Y4UcQdbXwWYVJEiIM1a3FqS2U4pkcqi"},"id":"dy5gLhqU_IG0","executionInfo":{"status":"ok","timestamp":1712962674511,"user_tz":300,"elapsed":32551,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"0a1cc12c-38e9-4ee7-ea97-346b23724afc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","source":["Setting up Training and Test Sets"],"metadata":{"id":"ib7iac6dAA0u"}},{"cell_type":"code","source":["amazon1.iloc[:,:5].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"5tym5CBCASQm","executionInfo":{"status":"ok","timestamp":1712962674512,"user_tz":300,"elapsed":103,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"b50acbe8-e2fa-4ecf-9313-dd9281abe8d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    price  number_available_in_stock  number_of_reviews  \\\n","4    0.60                          7                 21   \n","35   1.00                         10                 17   \n","58   1.13                         42                151   \n","83   1.19                          2                518   \n","84   1.20                         13                 12   \n","\n","    number_of_answered_questions  average_review_rating_of_5  \n","4                              1                         4.3  \n","35                             1                         4.2  \n","58                             1                         4.6  \n","83                             1                         4.5  \n","84                             1                         4.6  "],"text/html":["\n","  <div id=\"df-e66ee15d-5cf4-4710-ad24-4c0d2ce332c4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>number_available_in_stock</th>\n","      <th>number_of_reviews</th>\n","      <th>number_of_answered_questions</th>\n","      <th>average_review_rating_of_5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>0.60</td>\n","      <td>7</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>4.3</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>1.00</td>\n","      <td>10</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>4.2</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>1.13</td>\n","      <td>42</td>\n","      <td>151</td>\n","      <td>1</td>\n","      <td>4.6</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>1.19</td>\n","      <td>2</td>\n","      <td>518</td>\n","      <td>1</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>1.20</td>\n","      <td>13</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>4.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e66ee15d-5cf4-4710-ad24-4c0d2ce332c4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e66ee15d-5cf4-4710-ad24-4c0d2ce332c4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e66ee15d-5cf4-4710-ad24-4c0d2ce332c4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-973dccb0-a82e-48b8-abda-561289449e69\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-973dccb0-a82e-48b8-abda-561289449e69')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-973dccb0-a82e-48b8-abda-561289449e69 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"amazon1\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25005999280172747,\n        \"min\": 0.6,\n        \"max\": 1.2,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.0,\n          1.2,\n          1.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_available_in_stock\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 2,\n        \"max\": 42,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          10,\n          13,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 217,\n        \"min\": 12,\n        \"max\": 518,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17,\n          12,\n          151\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_answered_questions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_review_rating_of_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18165902124584932,\n        \"min\": 4.2,\n        \"max\": 4.6,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["x=amazon1.iloc[:,:5] # all parameters\n","y=amazon1['status'] # class labels 'southwest', 'southeast', 'northwest', 'northeast'\n","\n","#print(x) # Uncomment this line to verify your parameters/ independent variables/ attributes/ features\n","#print(y) # Uncomment this line to verify your class label"],"metadata":{"id":"RCdII7yE_-n2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Building kNN 2/3 to 1/3 train/ test split"],"metadata":{"id":"qjPrGR7VMTf-"}},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=.20)\n","\n","print(\"X_train shape: {}\".format(X_train.shape))\n","print(\"y_train shape: {}\".format(y_train.shape))\n","print(\"X_test shape: {}\".format(X_test.shape))\n","print(\"y_test shape: {}\".format(y_test.shape))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sfwGvr7lMJj0","executionInfo":{"status":"ok","timestamp":1712962813133,"user_tz":300,"elapsed":130,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"80b9ba5c-e03c-4f63-c26c-fa6c868dc9b9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape: (540, 5)\n","y_train shape: (540,)\n","X_test shape: (136, 5)\n","y_test shape: (136,)\n"]}]},{"cell_type":"markdown","source":["A 75% training/ 25% test split."],"metadata":{"id":"jdY4AYTwMOcm"}},{"cell_type":"code","source":["\"\"\"X_train, X_test, y_train, y_test = train_test_split(x, y, random_state = 0)\n","\n","# So, what training data do we have?\n","print(\"X_train shape: {}\".format(X_train.shape))\n","print(\"y_train shape: {}\".format(y_train.shape))\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"V3wu8TpnDgYC","executionInfo":{"status":"ok","timestamp":1712962674516,"user_tz":300,"elapsed":42,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"ca17ef4e-4144-48ee-c1f7-3551877b06ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'X_train, X_test, y_train, y_test = train_test_split(x, y, random_state = 0)\\n\\n# So, what training data do we have?\\nprint(\"X_train shape: {}\".format(X_train.shape))\\nprint(\"y_train shape: {}\".format(y_train.shape))'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["\"\"\"print(\"X_test shape: {}\".format(X_test.shape))\n","print(\"Y_test shape: {}\".format(y_test.shape))\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"fhC7xzTiET5h","executionInfo":{"status":"ok","timestamp":1712962674517,"user_tz":300,"elapsed":38,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"3cce627a-fa3b-4605-dfa1-13bd6445d941"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'print(\"X_test shape: {}\".format(X_test.shape))\\nprint(\"Y_test shape: {}\".format(y_test.shape))'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["\n","Building the Simplest Model with k=1"],"metadata":{"id":"OickEhPWHLh2"}},{"cell_type":"code","source":["model1 = KNeighborsClassifier(n_neighbors = 1)\n","model1.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"Q7ItxfwLHKlK","executionInfo":{"status":"ok","timestamp":1712962674518,"user_tz":300,"elapsed":37,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"14a0d577-653c-4eb1-eb92-9d1c0fffcf38"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=1)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=1)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["Testing the Model"],"metadata":{"id":"ix3xLULiHj6G"}},{"cell_type":"code","source":["y_pred = model1.predict(X_test)\n","print(\"Test set predictions: \\n {}\".format(y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i1anuvxNHgpp","executionInfo":{"status":"ok","timestamp":1712962674518,"user_tz":300,"elapsed":35,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"855fbc93-5add-4e0c-8865-91cfc98decf2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test set predictions: \n"," ['new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'used' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'used' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new' 'new'\n"," 'new' 'new' 'new' 'new']\n"]}]},{"cell_type":"code","source":["# Accuracy score\n","print(\"Test set score: {:.2f}\".format(model1.score(X_test, y_test)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e5ON-ARaIOu2","executionInfo":{"status":"ok","timestamp":1712962674525,"user_tz":300,"elapsed":39,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"dce7312b-819f-4193-cbeb-90c0326b2fa4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test set score: 0.98\n"]}]},{"cell_type":"markdown","source":["Data Inspection Calculated vs. Actual values"],"metadata":{"id":"Hw9WHiYnJEOf"}},{"cell_type":"code","source":["realvsmodel1 = pd.DataFrame(y_pred,y_test)\n","realvsmodel1 = pd.DataFrame({'predicted':y_pred,'original':y_test})\n","realvsmodel1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-mTsFPzyJFLZ","executionInfo":{"status":"ok","timestamp":1712962674526,"user_tz":300,"elapsed":37,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"1120f64f-c4f8-4a94-ccd6-21a7e128dee1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     predicted original\n","968        new      new\n","984        new      new\n","2590       new      new\n","2606       new      new\n","4719       new      new"],"text/html":["\n","  <div id=\"df-fcda9de4-e6f0-4486-baf8-d95b82f2c30d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>predicted</th>\n","      <th>original</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>968</th>\n","      <td>new</td>\n","      <td>new</td>\n","    </tr>\n","    <tr>\n","      <th>984</th>\n","      <td>new</td>\n","      <td>new</td>\n","    </tr>\n","    <tr>\n","      <th>2590</th>\n","      <td>new</td>\n","      <td>new</td>\n","    </tr>\n","    <tr>\n","      <th>2606</th>\n","      <td>new</td>\n","      <td>new</td>\n","    </tr>\n","    <tr>\n","      <th>4719</th>\n","      <td>new</td>\n","      <td>new</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcda9de4-e6f0-4486-baf8-d95b82f2c30d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcda9de4-e6f0-4486-baf8-d95b82f2c30d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcda9de4-e6f0-4486-baf8-d95b82f2c30d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7f0f74a4-1c5a-451c-85c6-cd0567d43514\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f0f74a4-1c5a-451c-85c6-cd0567d43514')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7f0f74a4-1c5a-451c-85c6-cd0567d43514 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"realvsmodel1","summary":"{\n  \"name\": \"realvsmodel1\",\n  \"rows\": 136,\n  \"fields\": [\n    {\n      \"column\": \"predicted\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"used\",\n          \"new\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"original\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"used\",\n          \"new\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":[" The Confusion Matrix"],"metadata":{"id":"Gzae1ZHkKE5l"}},{"cell_type":"code","source":["cm = confusion_matrix(y_test, y_pred, labels=model1.classes_)\n","cm_display = ConfusionMatrixDisplay(cm, display_labels=model1.classes_).plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"bvZlxeeGKA1Y","executionInfo":{"status":"ok","timestamp":1712962674789,"user_tz":300,"elapsed":297,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"a449affd-5902-4d61-eab4-7954a2101d16"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Classification Report"],"metadata":{"id":"WzqAn7jkKhXH"}},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(y_test, y_pred, labels=['new', 'used', 'collectible', 'refurbished']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lm6mGCqRKgJQ","executionInfo":{"status":"ok","timestamp":1712962674790,"user_tz":300,"elapsed":40,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"5d971423-cd6a-46b3-c41f-9abd7a2d5ba8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         new       0.99      0.99      0.99       133\n","        used       0.50      0.33      0.40         3\n"," collectible       0.00      0.00      0.00         0\n"," refurbished       0.00      0.00      0.00         0\n","\n","   micro avg       0.98      0.98      0.98       136\n","   macro avg       0.37      0.33      0.35       136\n","weighted avg       0.97      0.98      0.98       136\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["Optimizing k with Cross-Validation"],"metadata":{"id":"2ddOGTlNNbmg"}},{"cell_type":"code","source":["# To determine how to pick k, we are first creating a list of potential k values\n","klist = list(range(1,25,2)) # Our list goes from 1 to 50 in increments of 2\n","\n","# Then we create an empty list that will hold cross-validation scores\n","cv_scores = []"],"metadata":{"id":"0QoJciKoNahj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Perform 10-fold cross validation for each k value (we have a small dataset, so we can do this)\n","for k in klist:\n","    model1 = neighbors.KNeighborsClassifier(n_neighbors=k)\n","    scores = cross_val_score(model1, x, y, cv=10, scoring='accuracy')\n","    cv_scores.append(scores.mean())\n","\n","# Changing to misclassification error\n","errors = 1- np.array(cv_scores)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GJtHmxHcNoey","executionInfo":{"status":"ok","timestamp":1712962677665,"user_tz":300,"elapsed":2898,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"b50a64b4-ffa2-46e9-d4cb-34d9b965e33d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning: The least populated class in y has only 7 members, which is less than n_splits=10.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["optimal_k = klist[np.argmin(errors)]\n","print(\"The optimal number of neighbors is {}\".format(optimal_k))\n","\n","# plot misclassification error vs k\n","plt.plot(klist, errors)\n","plt.xlabel('Number of Neighbors K')\n","plt.ylabel('Misclassification Error')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"jj7QjVu7Rodl","executionInfo":{"status":"ok","timestamp":1712962678359,"user_tz":300,"elapsed":703,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"950eeef8-cc00-4bba-c022-cac2d43e3086"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The optimal number of neighbors is 7\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model1 = neighbors.KNeighborsClassifier(n_neighbors=15)\n","\n","model1.fit(X_train, y_train)\n","\n","y_pred = model1.predict(X_test)"],"metadata":{"id":"wOYJDpbuTE70"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix(y_test, y_pred, labels=model1.classes_)\n","cm_display = ConfusionMatrixDisplay(cm, display_labels=model1.classes_).plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"HQ-LjmLKTPMp","executionInfo":{"status":"ok","timestamp":1712962678976,"user_tz":300,"elapsed":621,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"3902d093-24dd-4a9c-f902-aa90d2e4eae7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred, labels=['new', 'used', 'collectible', 'refurbished']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G2U9h-3VTYoT","executionInfo":{"status":"ok","timestamp":1712962678977,"user_tz":300,"elapsed":8,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"e5a27197-8209-4dd4-efee-cfe4b33b7412"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         new       0.98      1.00      0.99       133\n","        used       0.00      0.00      0.00         3\n"," collectible       0.00      0.00      0.00         0\n"," refurbished       0.00      0.00      0.00         0\n","\n","   micro avg       0.98      0.98      0.98       136\n","   macro avg       0.24      0.25      0.25       136\n","weighted avg       0.96      0.98      0.97       136\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]}]}