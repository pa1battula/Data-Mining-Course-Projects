{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"colab":{"provenance":[{"file_id":"13gMg_WLEhNpJ4s16i5YH0mBYDHfX7ocn","timestamp":1622296550607}]}},"cells":[{"cell_type":"markdown","metadata":{"id":"-mh679lW5v_t"},"source":["#**Module 4: Data Wrangling Part 2**\n","In this module, you will learn how to\n","* Transform data\n","* De-duplicate data\n","* Substitute data\n","* Discretize data\n","\n","**Be sure to expand all the hidden cells, run all the code, and do all the exercises--you will need the techniques for the lesson lab!**"]},{"cell_type":"markdown","metadata":{"id":"7-M0cWUsbPO2"},"source":["#**What is Data Transformation?**\n","\n","Watch the video below."]},{"cell_type":"code","source":["from IPython.display import HTML\n","HTML('<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kx3sOqW5zj4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":371},"id":"42fkWhqm3whB","executionInfo":{"status":"ok","timestamp":1706233701049,"user_tz":300,"elapsed":135,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"6ea0aaca-4394-4668-c581-4f45fa91b401"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/IPython/core/display.py:724: UserWarning: Consider using IPython.display.IFrame instead\n","  warnings.warn(\"Consider using IPython.display.IFrame instead\")\n"]},{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kx3sOqW5zj4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"]},"metadata":{},"execution_count":1}]},{"cell_type":"markdown","source":["Data Transformation is just like this: We put one type of data into our \"transformation\" hat, like strings or categorical data, do our magic, and out comes something else--often numbers, buckets, or other categories. We don't change the size of the hat while we transform the data, that is, we don't change the internal relationships between the data, but we do change their format or the way they are organized. Most often, we change numeric data to different scales, usually between 0 and 1, which is called \"Normalization.'\n","\n","So, when we wrangle data, we transform and map data from one \"raw\" data format (like string, categorical, or numeric) into another format in order to make it usable for a number of analytical purposes. Other terms used for Data Wrangling are Preprocessing or Data Munging. Whatever the word, the goal is to bend the data to our formatting and subsetting goals so that we can use them with the algorithms and other math that we want to use.\n","\n","Let's get started!"],"metadata":{"id":"jbWsQuAY3xQQ"}},{"cell_type":"markdown","metadata":{"id":"bnVNWu8SBjIg"},"source":["#**0. Preparation and Setup**\n","We are working with our adult dataset again, so we're loading our libraries and our dataset just like last time."]},{"cell_type":"code","metadata":{"id":"vui8bv375v_v","executionInfo":{"status":"ok","timestamp":1706233706592,"user_tz":300,"elapsed":1454,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"colab":{"base_uri":"https://localhost:8080/","height":313},"outputId":"3410d652-af68-4da4-d218-c8d9e5e4d486"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","#Reading in the data as adult dataframe\n","adult = pd.read_csv(\"https://raw.githubusercontent.com/shstreuber/Data-Mining/master/data/adult.data.simplified25.csv\")\n","\n","#Verifying that we can see the data\n","adult.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age         workclass  education  educationyears       maritalstatus  \\\n","0   39         State-gov  Bachelors              13       Never-married   \n","1   50  Self-emp-not-inc  Bachelors              13  Married-civ-spouse   \n","2   38           Private    HS-grad               9            Divorced   \n","3   53           Private       11th               7  Married-civ-spouse   \n","4   28           Private  Bachelors              13  Married-civ-spouse   \n","\n","          occupation   relationship   race     sex  hoursperweek  \\\n","0       Adm-clerical  Not-in-family  White    Male            40   \n","1    Exec-managerial        Husband  White    Male            13   \n","2  Handlers-cleaners  Not-in-family  White    Male            40   \n","3  Handlers-cleaners        Husband  Black    Male            40   \n","4     Prof-specialty           Wife  Black  Female            40   \n","\n","   nativecountry  incomeUSD  \n","0  United-States      43747  \n","1  United-States      38907  \n","2  United-States      25055  \n","3  United-States      26733  \n","4           Cuba      23429  "],"text/html":["\n","  <div id=\"df-64c943ab-ed08-4e9d-a537-2c7d9e2b6a9d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>25055</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>26733</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>23429</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64c943ab-ed08-4e9d-a537-2c7d9e2b6a9d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64c943ab-ed08-4e9d-a537-2c7d9e2b6a9d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64c943ab-ed08-4e9d-a537-2c7d9e2b6a9d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bba91c80-9eb3-46db-9e55-a4c66c1be0c1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bba91c80-9eb3-46db-9e55-a4c66c1be0c1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bba91c80-9eb3-46db-9e55-a4c66c1be0c1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":[],"metadata":{"id":"dB5MsKYZG80c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","adult = pd.read_csv(\"https://raw.githubusercontent.com/shstreuber/Data-Mining/master/data/adult.data.simplified25.csv\")\n","adult.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"klyZnI6AkaK9","executionInfo":{"status":"ok","timestamp":1706233709994,"user_tz":300,"elapsed":354,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"1aad9c2a-0a0a-443f-cf19-88ae242cf3e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age         workclass  education  educationyears       maritalstatus  \\\n","0   39         State-gov  Bachelors              13       Never-married   \n","1   50  Self-emp-not-inc  Bachelors              13  Married-civ-spouse   \n","2   38           Private    HS-grad               9            Divorced   \n","3   53           Private       11th               7  Married-civ-spouse   \n","4   28           Private  Bachelors              13  Married-civ-spouse   \n","\n","          occupation   relationship   race     sex  hoursperweek  \\\n","0       Adm-clerical  Not-in-family  White    Male            40   \n","1    Exec-managerial        Husband  White    Male            13   \n","2  Handlers-cleaners  Not-in-family  White    Male            40   \n","3  Handlers-cleaners        Husband  Black    Male            40   \n","4     Prof-specialty           Wife  Black  Female            40   \n","\n","   nativecountry  incomeUSD  \n","0  United-States      43747  \n","1  United-States      38907  \n","2  United-States      25055  \n","3  United-States      26733  \n","4           Cuba      23429  "],"text/html":["\n","  <div id=\"df-03107d69-7437-4876-8395-cc5c6e2c779e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>25055</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>26733</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>23429</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03107d69-7437-4876-8395-cc5c6e2c779e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-03107d69-7437-4876-8395-cc5c6e2c779e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-03107d69-7437-4876-8395-cc5c6e2c779e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-235374f1-1476-4039-b75c-fb87bf93572b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-235374f1-1476-4039-b75c-fb87bf93572b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-235374f1-1476-4039-b75c-fb87bf93572b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"gQDK8kjYdqCl"},"source":["And here is the adult_small dataframe that you built in the previous notebook. We will use it for a small, fast, proof-of-concept before we use more resources for the larger computation."]},{"cell_type":"code","metadata":{"id":"eF80q8WMc7Zh"},"source":["adult_small=adult.iloc[70:80,]\n","adult_small"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult_small = adult.iloc[70:80,]\n","adult_small"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":539},"id":"G25qUosSl12-","executionInfo":{"status":"ok","timestamp":1706151075169,"user_tz":300,"elapsed":274,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"63dbd58b-b3e3-4590-e5b1-d3a7cbcfc10f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    age         workclass     education  educationyears       maritalstatus  \\\n","70   19           Private  Some-college              10       Never-married   \n","71   31           Private     Bachelors              13           Separated   \n","72   29  Self-emp-not-inc     Bachelors              13  Married-civ-spouse   \n","73   23           Private  Some-college              10       Never-married   \n","74   79           Private  Some-college              10  Married-civ-spouse   \n","75   27           Private       HS-grad               9       Never-married   \n","76   40           Private    Assoc-acdm              12  Married-civ-spouse   \n","77   67                 ?          10th               6  Married-civ-spouse   \n","78   18           Private          11th               7       Never-married   \n","79   31         Local-gov       7th-8th               4  Married-civ-spouse   \n","\n","           occupation    relationship   race     sex  hoursperweek  \\\n","70     Prof-specialty       Own-child  White    Male            32   \n","71              Sales       Own-child  Black  Female            40   \n","72              Sales         Husband  White    Male            70   \n","73  Machine-op-inspct   Not-in-family  White    Male            40   \n","74     Prof-specialty  Other-relative  White    Male            20   \n","75      Other-service       Own-child  White    Male            40   \n","76       Adm-clerical         Husband  White    Male            40   \n","77                  ?         Husband  White    Male             2   \n","78      Other-service       Own-child  White  Female            22   \n","79    Farming-fishing         Husband  White    Male            40   \n","\n","    nativecountry  incomeUSD  \n","70  United-States      41013  \n","71  United-States      33571  \n","72  United-States     190337  \n","73  United-States      23773  \n","74  United-States      49908  \n","75         Mexico      34334  \n","76  United-States      47470  \n","77  United-States      40188  \n","78  United-States      44387  \n","79  United-States      40938  "],"text/html":["\n","  <div id=\"df-39683a9a-94ed-48bb-8a94-287e1095beb7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>70</th>\n","      <td>19</td>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>Prof-specialty</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>32</td>\n","      <td>United-States</td>\n","      <td>41013</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>31</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Separated</td>\n","      <td>Sales</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>33571</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>29</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Sales</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>70</td>\n","      <td>United-States</td>\n","      <td>190337</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>23</td>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>23773</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>79</td>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Other-relative</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>49908</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Other-service</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>Mexico</td>\n","      <td>34334</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Adm-clerical</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>47470</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>67</td>\n","      <td>?</td>\n","      <td>10th</td>\n","      <td>6</td>\n","      <td>Married-civ-spouse</td>\n","      <td>?</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>2</td>\n","      <td>United-States</td>\n","      <td>40188</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>18</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Never-married</td>\n","      <td>Other-service</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>22</td>\n","      <td>United-States</td>\n","      <td>44387</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>31</td>\n","      <td>Local-gov</td>\n","      <td>7th-8th</td>\n","      <td>4</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>40938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39683a9a-94ed-48bb-8a94-287e1095beb7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39683a9a-94ed-48bb-8a94-287e1095beb7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39683a9a-94ed-48bb-8a94-287e1095beb7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6462d280-1fab-407f-aacc-22a97cdbe80f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6462d280-1fab-407f-aacc-22a97cdbe80f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6462d280-1fab-407f-aacc-22a97cdbe80f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"zymnCB2E-szM"},"source":["# **1. Data Transformation**\n","As you have seen, numeric datatypes allow you to do much more fun math than string datatypes. You can count them, sum them, average them, boxplot them ... all that, while string datatypes, well they can be counted, so much is true--but that really is it."]},{"cell_type":"markdown","metadata":{"id":"PJQHnuM45wBb"},"source":["\n","We want to transform a categorical attribute, in this case 'race', into a numeric datatype. The Python format for this operation is `DataFrame.astype(dtype, copy=True, errors='raise')`\n","In our case, this would be something like\n","* `adult_small.race.astype('int32')`\n","* `adult_small.race.astype('category')`\n","* `adult_small.race.astype('category', ordered=True)`\n","\n","Let's get started. First, let's verify our datatype for 'race'\n","\n"]},{"cell_type":"code","metadata":{"id":"nzXWvcb35wBd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706151082155,"user_tz":300,"elapsed":257,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"6b6104c0-07de-4afb-a087-447f2e33b7e4"},"source":["adult_small.race.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('O')"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"ERq9GIGtcACB"},"source":["'O' means 'object', which is basically a string value. Let's now transform our 'race' attribute to numeric values. Below are all the steps."]},{"cell_type":"markdown","metadata":{"id":"HocgWNiGqcIZ"},"source":["## **1.1 Adding a column with the data we want to transform**\n","We could theoretically transform the 'race' attribute in place, but if our code causes problems, we could mess up our entire dataframe. So, instead, we will first add a new column into which we will copy the contents of the 'race' attribute. In a second step, we will transform the values in that new column.\n","\n","Detailed explanations are in the code comments below."]},{"cell_type":"code","metadata":{"id":"Zpk1SU9w5wBu"},"source":["# Creating a new attribute and populating it with the contents of the attribute that we want to transform.\n","race_num=adult_small.race\n","\n","# Adding the new attribute to the dataframe\n","adult_small['race_num'] = race_num\n","\n","# Checking the contents of the new attribute\n","adult_small.race_num"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["race_num = adult_small.race\n","adult_small['race_num'] = race_num\n","adult_small.race_num"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"23sFhg-5hRLF","executionInfo":{"status":"ok","timestamp":1706151262565,"user_tz":300,"elapsed":256,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"92b497bc-0778-43ac-9346-4590b549c996"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-29-c110726814e9>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  adult_small['race_num'] = race_num\n"]},{"output_type":"execute_result","data":{"text/plain":["70    White\n","71    Black\n","72    White\n","73    White\n","74    White\n","75    White\n","76    White\n","77    White\n","78    White\n","79    White\n","Name: race_num, dtype: object"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"5c6aiJYUmwOn"},"source":["# Let's check the shape now. Instead of 12 attributes, we should have 10 rows and 13 columns now because we have built a new race_num attribute\n","adult_small.shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult_small.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_6tkgCfKiowu","executionInfo":{"status":"ok","timestamp":1706151293414,"user_tz":300,"elapsed":5,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"1d8dda31-b83d-4d0c-dfb1-a06501c59139"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10, 13)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"eJQe0tGsl7i-"},"source":["# Now that we have the race_num column built, let's check the datatypes of both attributes.\n","adult_small.dtypes[['race','race_num']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult_small.dtypes[['race','race_num']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KfJKGGwtitYF","executionInfo":{"status":"ok","timestamp":1706151335105,"user_tz":300,"elapsed":269,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"116c6da8-ed1d-4e6c-d861-0b6007b1f68d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["race        object\n","race_num    object\n","dtype: object"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","metadata":{"id":"4KgdeN0Mqp9j"},"source":["## **1.2 Transforming the values**\n","To transform an object value to numeric, we need to get the numbers from somewhere. In our case, we will transform the object to category. That gives us the index numbers for the category. Then we will replace the string values with these index numbers for the category--and voila! we have a numeric transformation.\n","(If you see any attribute replacement warnings as you run the code below, you can ignore them.)"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"xLD7OLlm5wB1","colab":{"base_uri":"https://localhost:8080/","height":245},"executionInfo":{"status":"error","timestamp":1706265286727,"user_tz":300,"elapsed":193,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"1ac2125e-e6fe-497a-e10f-20e641f3fc6e"},"source":["# Here, we convert the race_num values to categorical (to obtain the index numbers)\n","adult_small['race_num']= adult_small['race_num'].astype('category')\n","\n","# Now we replace the categories with their index numbers, i.e. the category codes\n","adult_small['race_num']= adult_small['race_num'].cat.codes\n","\n","# Let's see what the datatypes look like now\n","adult_small.dtypes[['race','race_num']]"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'adult_small' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-c38155902452>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Here, we convert the race_num values to categorical (to obtain the index numbers)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0madult_small\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'race_num'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0madult_small\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'race_num'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'category'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Now we replace the categories with their index numbers, i.e. the category codes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0madult_small\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'race_num'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0madult_small\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'race_num'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcodes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'adult_small' is not defined"]}]},{"cell_type":"code","source":["adult_small['race_num'] = adult_small['race_num'].astype('category')\n","adult_small['race_num'] = adult_small['race_num'].cat.codes\n","adult_small[['race', 'race_num']]"],"metadata":{"id":"BASRJclnjfIX"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7xL7eGHW5wB8"},"source":["# Now let's display the contents of both attributes to double-check\n","adult_small[['race','race_num']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult_small[['race', 'race_num']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"hV_UJEtek_Kc","executionInfo":{"status":"ok","timestamp":1706151926856,"user_tz":300,"elapsed":286,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"1c590835-cc62-4348-c12a-f786805914bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     race  race_num\n","70  White         1\n","71  Black         0\n","72  White         1\n","73  White         1\n","74  White         1\n","75  White         1\n","76  White         1\n","77  White         1\n","78  White         1\n","79  White         1"],"text/html":["\n","  <div id=\"df-1feef249-ac11-47dd-b6ce-12ce037a0458\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>race</th>\n","      <th>race_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>70</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>Black</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1feef249-ac11-47dd-b6ce-12ce037a0458')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1feef249-ac11-47dd-b6ce-12ce037a0458 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1feef249-ac11-47dd-b6ce-12ce037a0458');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c0d614aa-4cb5-4550-966f-c18582d10cfb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0d614aa-4cb5-4550-966f-c18582d10cfb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c0d614aa-4cb5-4550-966f-c18582d10cfb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"QDA_qvRzsOQX"},"source":["**SUCCESS!** Now that we have worked the code out for our small proof-of-concept dataframe, we can apply it to the entire adult dataframe."]},{"cell_type":"code","metadata":{"id":"7o-UELnu5wCG"},"source":["# First, we back the dataframe up.\n","adult2=adult\n","\n","# Now we build the column and copy the original values into it\n","adult2['race_num'] = adult2.race\n","\n","# Third, we convert race_num into categorical\n","adult2['race_num']= adult2['race_num'].astype('category')\n","\n","# Then, we replace the strings with the category indices\n","adult2['race_num']= adult2['race_num'].cat.codes\n","\n","# Now, we check the data types\n","adult2.dtypes[['race','race_num']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult2 = adult\n","adult2['race_num'] = adult2.race\n","adult2['race_num'] = adult2['race_num'].astype('category')\n","adult2['race_num'] = adult2['race_num'].cat.codes\n","adult2.dtypes[['race','race_num']]\n","adult2.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":167},"id":"AiKo71BVl0Ar","executionInfo":{"status":"ok","timestamp":1706152724150,"user_tz":300,"elapsed":395,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"a9c39e2c-582b-497a-e577-e9dc41178a7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age         workclass  education  educationyears       maritalstatus  \\\n","0   39         State-gov  Bachelors              13       Never-married   \n","1   50  Self-emp-not-inc  Bachelors              13  Married-civ-spouse   \n","\n","        occupation   relationship   race   sex  hoursperweek  nativecountry  \\\n","0     Adm-clerical  Not-in-family  White  Male            40  United-States   \n","1  Exec-managerial        Husband  White  Male            13  United-States   \n","\n","   incomeUSD  race_num  \n","0      43747         4  \n","1      38907         4  "],"text/html":["\n","  <div id=\"df-e880d6e5-0cdd-461a-845b-8d7228b75566\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","      <th>race_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e880d6e5-0cdd-461a-845b-8d7228b75566')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e880d6e5-0cdd-461a-845b-8d7228b75566 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e880d6e5-0cdd-461a-845b-8d7228b75566');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9117618e-88e0-46f3-9fc4-30232e2abeaa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9117618e-88e0-46f3-9fc4-30232e2abeaa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9117618e-88e0-46f3-9fc4-30232e2abeaa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"PgGqvx7QtehQ"},"source":["**YAY!** That worked, too. But how did pandas assign the numbers? Let's find out:"]},{"cell_type":"code","metadata":{"scrolled":true,"id":"FwGxPCDp5wCN"},"source":["# Making a temporary new dataframe because it's so much easier to work with just 2 attributes\n","race_exploration=adult2[['race','race_num']]\n","race2=race_exploration.drop_duplicates()\n","race2.sort_values(by=['race_num'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["race_explore = adult2[['race', 'race_num']]\n","race2 = race_explore.drop_duplicates()\n","race2.sort_values(by=['race_num'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"XgAh_6GfokPY","executionInfo":{"status":"ok","timestamp":1706153834148,"user_tz":300,"elapsed":258,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"52523258-cc35-43d7-b220-c20e2dd9cf50"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  race  race_num\n","15  Amer-Indian-Eskimo         0\n","11  Asian-Pac-Islander         1\n","3                Black         2\n","50               Other         3\n","0                White         4"],"text/html":["\n","  <div id=\"df-71df9e8b-e54b-4213-b68e-f3171d7bfa86\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>race</th>\n","      <th>race_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <td>Amer-Indian-Eskimo</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Asian-Pac-Islander</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Black</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Other</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>White</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71df9e8b-e54b-4213-b68e-f3171d7bfa86')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-71df9e8b-e54b-4213-b68e-f3171d7bfa86 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-71df9e8b-e54b-4213-b68e-f3171d7bfa86');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a690e72d-f4bf-4654-bdef-7c9173d5353c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a690e72d-f4bf-4654-bdef-7c9173d5353c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a690e72d-f4bf-4654-bdef-7c9173d5353c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","metadata":{"id":"FRDyehO-n-7g"},"source":["##**Your Turn**\n","Explain in a couple of complete sentences the logic with which pandas has assigned the numbers for the race_num array."]},{"cell_type":"markdown","source":["The Sort function has formated the values of race_num field of the race2 dataframe in asecnding-order and the order is like from 0 to 4 value."],"metadata":{"id":"p4lzPrChpux1"}},{"cell_type":"markdown","metadata":{"id":"dfLScvE35wCU"},"source":["# **2. De-Duplication**\n","Check out this line in the example above:\n","`race2=race_exploration.drop_duplicates()`\n","\n","This is literally all there is to de-duplication.\n","For more on drop_duplicates() see, https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop_duplicates.html"]},{"cell_type":"code","source":["race2 = race_explore.drop_duplicates()"],"metadata":{"id":"uCW9a_qRrSWL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DaQm7prI5wCV"},"source":["# **3. Substituting Values in Dataframes**\n","\n","OK--tiger, meet lion, and lion--meet rhino!\n","\n","<img src=\"https://github.com/shstreuber/Data-Mining/blob/master/images/transformation.jpg?raw=true\">\n","\n","Here is how to substitute values in a dataframe. For this purpose, we will try out the df.replace method shown in https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.replace.html. This really convenient method works for strings and numeric values alike.\n","\n","Here, we will work with the workclass attribute."]},{"cell_type":"code","metadata":{"id":"SDfB_pNT5wCW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706233779723,"user_tz":300,"elapsed":161,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"09043baa-1078-4992-f1de-3bf9703e2158"},"source":["adult3 = adult\n","adult3.workclass.unique()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['State-gov', 'Self-emp-not-inc', 'Private', 'Federal-gov',\n","       'Local-gov', '?', 'Self-emp-inc', 'Without-pay', 'Never-worked'],\n","      dtype=object)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["adult3 =adult\n","adult3.workclass.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9-LrJ0hluKYP","executionInfo":{"status":"ok","timestamp":1706154466004,"user_tz":300,"elapsed":286,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"2b17b1f7-6dc1-4aa9-8e78-9349972b417a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['State-gov', 'Self-emp-not-inc', 'Private', 'Federal-gov',\n","       'Local-gov', '?', 'Self-emp-inc', 'Without-pay', 'Never-worked'],\n","      dtype=object)"]},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","metadata":{"id":"NnX1383hzPRl"},"source":["### The Problem\n","Oh, look: We have a '?' value in there. This could be any of the following\n","* Misformatted data that might have accidentally broken during the E of [ETL](https://www.sas.com/en_us/insights/data-management/what-is-etl.html).\n","* Some sort of placeholder character that our data warehouse has inserted for missing values.\n","* Intentional and supposed to stand for 'Unknown'.\n","\n","Whatever it is, we may never know. That is one of the big problems when dealing with big datasets. The next problem is:\n","**bold text**\n","> **What are we going to do with it?**\n","\n","Are we going to just **ignore** the rows in which the '?' appears--or are we going to **do something about it**? To answer that question, it is helpful to know how many rows contain the '?'\n","\n"]},{"cell_type":"code","metadata":{"id":"epXscXUH5wCd"},"source":["adult3[adult3['workclass'] == '?']"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3[adult['workclass'] == '?'].shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D9sMt5dPvL6T","executionInfo":{"status":"ok","timestamp":1706154623161,"user_tz":300,"elapsed":4,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"ea78f475-9dd2-44f5-c82a-e50b6198b78b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1399, 13)"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","metadata":{"id":"p8nxCFHy2hBF"},"source":["Hm. That's 1,399 rows out of 25,000--5.5% of all the data. At this point, it's a good idea to ask your supervisor, that is, the client of your analysis, what they would prefer. Let's say the client comes back to say they **don't** want you to drop 6% of the dataset.\n","\n","At that point, you will have to make an assumption--and that's where critical thinking skills come in: Does it matter whether there's an accidental or an intentional '?'. If it does, then further research is needed. If it does NOT, then it might be safe to assume that the '?' stands for 'Unknown'.\n","\n","That's why we will translate '?' to 'Unknown'."]},{"cell_type":"code","metadata":{"id":"Cg9UwBDC5wCj"},"source":["# Instead of building another column to see any transformations, we will substitute data in place this time around.\n","# For this purpose, we're using the replace() method from pandas\n","adult3.workclass.replace('?','Unknown', inplace=True)\n","\n","# Did we indeed replace all '?'? Let's check:\n","adult3[adult3['workclass'] == '?']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ORwHoBmN5wCo"},"source":["# Looks like it worked. Let's check if the new value appears in the list of unique values.\n","adult3.workclass.unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3.workclass.replace('?','Unknown', inplace=True)\n","adult3[adult[\"workclass\"] == '?']\n","adult3.workclass.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lpfUnGf7v61j","executionInfo":{"status":"ok","timestamp":1706154947947,"user_tz":300,"elapsed":11,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"45fef8f3-c2ab-4ec1-a004-94f796eac5a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['State-gov', 'Self-emp-not-inc', 'Private', 'Federal-gov',\n","       'Local-gov', 'Unknown', 'Self-emp-inc', 'Without-pay',\n","       'Never-worked'], dtype=object)"]},"metadata":{},"execution_count":62}]},{"cell_type":"markdown","metadata":{"id":"zn3ggAxc4mnJ"},"source":["## **Your Turn**\n","Take a look at the unique values in the occupation attribute. Do you see something similar as what we solved above?\n","1. Replace the unusual value with 'NA'\n","2. Then count how many rows contain 'NA' values"]},{"cell_type":"markdown","source":[],"metadata":{"id":"Jgd8uiXw_iS1"}},{"cell_type":"code","metadata":{"id":"bNMl3Ud_5wCz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706155294456,"user_tz":300,"elapsed":268,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"d59e891e-1544-4bb9-ea9c-b9f8898167c9"},"source":["adult3.occupation.unique()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Adm-clerical', 'Exec-managerial', 'Handlers-cleaners',\n","       'Prof-specialty', 'Other-service', 'Sales', 'Craft-repair',\n","       'Transport-moving', 'Farming-fishing', 'Machine-op-inspct',\n","       'Tech-support', 'NA', 'Protective-serv', 'Armed-Forces',\n","       'Priv-house-serv'], dtype=object)"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["adult3.occupation.replace('?',\"NA\", inplace=True)"],"metadata":{"id":"jtXQns2sxHqI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3[adult3['occupation'] == 'NA']"],"metadata":{"id":"vOh_Qr3Gx-AM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3.occupation.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyrZa9y3yo97","executionInfo":{"status":"ok","timestamp":1706155743722,"user_tz":300,"elapsed":249,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"df33ba5e-ba09-4382-d316-35c2934e9f52"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Adm-clerical', 'Exec-managerial', 'Handlers-cleaners',\n","       'Prof-specialty', 'Other-service', 'Sales', 'Craft-repair',\n","       'Transport-moving', 'Farming-fishing', 'Machine-op-inspct',\n","       'Tech-support', 'NA', 'Protective-serv', 'Armed-Forces',\n","       'Priv-house-serv'], dtype=object)"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","metadata":{"id":"49JiTxR35wDy"},"source":["# **4. Discretization/ Aggregation**\n","Remember how I said we're also going to exchange the lion and the tiger from the Rocky and Bullwinkle cartoon into a \"Big Cats\" category? That's essentially what Discretization is about.\n","\n","<img src = \"https://github.com/shstreuber/Data-Mining/blob/master/images/aggregation.jpg?raw=true\">\n","\n","Data discretization is typically defined as a process of converting continuous data attribute values into a finite set of intervals and associating with each interval some specific data value. So, you could say that the goal of discretization is to simplify data by putting them into summary categories. While discretization is typically applied to numeric data only, we can also use this concept to simplify other data (like object-type data or data that has too many categories to be useful).\n"]},{"cell_type":"markdown","metadata":{"id":"ryIUaek080A5"},"source":["##**4.1 Data Summarization**\n","We're not done with the workclass attribute just yet. As you have seen, we have 9 categories. We will reduce these to the following:\n","- Unknown--contains all Unknown, Never-worked, and Without-pay\n","- Government--contains all Federal, State, and Local government employees\n","- Self--contains all self-employed groups\n","\n","This summarization will allow us to more easily group our data by the three larger units in the workclass attribute."]},{"cell_type":"code","metadata":{"id":"0RmNwoXC5wDz"},"source":["# Let's check the categories in the workclass attribute!\n","adult3.workclass.unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3.workclass.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TSDhtjMj2mGR","executionInfo":{"status":"ok","timestamp":1706156530642,"user_tz":300,"elapsed":11,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"49ea0954-8ecb-4555-a251-08febd252a3a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['State-gov', 'Self-emp-not-inc', 'Private', 'Federal-gov',\n","       'Local-gov', 'Unknown', 'Self-emp-inc', 'Without-pay',\n","       'Never-worked'], dtype=object)"]},"metadata":{},"execution_count":82}]},{"cell_type":"markdown","metadata":{"id":"d62mRQex5wD_"},"source":["Given the structure of this attribute, we are seeing three \"natural\" groups: Unknown, Government, and self-employed people. This means we can simplify the data we have and create three big aggregations with simple substitutions:"]},{"cell_type":"code","metadata":{"id":"zyEPwKqY5wEA"},"source":["#Summarizing all the Unknowns\n","adult3.workclass.replace('Unknown','Unknown', inplace=True)\n","adult3.workclass.replace('Never-worked','Unknown', inplace=True)\n","adult3.workclass.replace('Without-pay','Unknown', inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xqvKM57l8yxt"},"source":["#Summarizing all the Government attributes\n","adult3.workclass.replace('State-gov', 'Government', inplace=True)\n","adult3.workclass.replace('Federal-gov', 'Government', inplace=True)\n","adult3.workclass.replace('Local-gov', 'Government', inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xTGaIHBom8O2"},"source":["##**Your Turn**\n","Complete the job! Summarize the other three groups into the \"Self\" category."]},{"cell_type":"code","metadata":{"id":"ODdtCWvLnq6f","colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"status":"ok","timestamp":1706157257706,"user_tz":300,"elapsed":264,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"b8568524-b1af-4c8b-860e-f450428b2ebc"},"source":["adult3.workclass.replace('Private','Self', inplace=True)\n","adult3.workclass.replace('Self-emp-inc','Self', inplace=True)\n","adult3.workclass.replace('Self-emp-not-inc', 'Self', inplace=True)\n","adult3.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age   workclass  education  educationyears       maritalstatus  \\\n","0   39  Government  Bachelors              13       Never-married   \n","1   50        Self  Bachelors              13  Married-civ-spouse   \n","2   38        Self    HS-grad               9            Divorced   \n","3   53        Self       11th               7  Married-civ-spouse   \n","4   28        Self  Bachelors              13  Married-civ-spouse   \n","\n","          occupation   relationship   race     sex  hoursperweek  \\\n","0       Adm-clerical  Not-in-family  White    Male            40   \n","1    Exec-managerial        Husband  White    Male            13   \n","2  Handlers-cleaners  Not-in-family  White    Male            40   \n","3  Handlers-cleaners        Husband  Black    Male            40   \n","4     Prof-specialty           Wife  Black  Female            40   \n","\n","   nativecountry  incomeUSD  race_num  \n","0  United-States      43747         4  \n","1  United-States      38907         4  \n","2  United-States      25055         4  \n","3  United-States      26733         2  \n","4           Cuba      23429         2  "],"text/html":["\n","  <div id=\"df-cf0cbc27-10fe-4a67-8348-bf129d5595d8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","      <th>race_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>Government</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Self</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>25055</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Self</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>26733</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Self</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>23429</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf0cbc27-10fe-4a67-8348-bf129d5595d8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf0cbc27-10fe-4a67-8348-bf129d5595d8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf0cbc27-10fe-4a67-8348-bf129d5595d8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a667975a-264a-4bd0-b077-0d7e95c5d90f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a667975a-264a-4bd0-b077-0d7e95c5d90f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a667975a-264a-4bd0-b077-0d7e95c5d90f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","metadata":{"id":"tDpoPQdC7Q6C"},"source":["##**4.2 Binning and Bucketing (Numeric Discretization)**\n","We have arrived at the \"pure\" meaning of discretization--the one you find in most textbooks. In this context, you'll often hear the terms binning and bucketing.\n","\n","In short, Data binning and bucketing groups data in bins or buckets, in the sense that it replaces values contained into a small interval with a single representative value for that interval. It includes also dealing with missing values, formatting, normalization and standardization. That makes it a technique for data smoothing.\n","\n","The **difference** between binning and bucketing is:\n","* In **bucketing**, we define the boundaries for the categories ourselves. They don't have to be the same size.\n","* In **binning**, we define the number of categories, and the code distributes them evenly across our dataset, depending on whether we set the binning criterion to the number of data in each bin, or to the value of the data.\n","\n","On a technical level, we to convert numeric values to categorical or to sample (quantise) numeric values, sometimes using distance (remember distance from one of the previous modules?) and sometimes using frequency. we can also reduce numeric values through sampling.\n","\n","Normalization and standardization are special cases of Discretization that we'll talk about in a bit. To learn more in depth about binning, go [here](https://towardsdatascience.com/data-preprocessing-with-python-pandas-part-5-binning-c5bd5fd1b950). To find out more about how to do this at a practical level, take a look at [this explanation](https://stackoverflow.com/questions/45273731/binning-column-with-python-pandas)."]},{"cell_type":"markdown","metadata":{"id":"DxmiSUvP_39G"},"source":["###**Binning**\n","It's time to look at incomeUSD. To remind yourself what the attribute looks like, use the describe() function to produce a 5-number summary:"]},{"cell_type":"code","metadata":{"id":"t8P0HrN3ANfx"},"source":["adult.incomeUSD.describe()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult.incomeUSD.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DJseVIFW_5TB","executionInfo":{"status":"ok","timestamp":1706158976818,"user_tz":300,"elapsed":12,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"db25da0c-0ed2-44a6-8fbd-664e5ecd16c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     25000.000000\n","mean      56382.802560\n","std       44128.661114\n","min       20002.000000\n","25%       29963.750000\n","50%       39689.000000\n","75%       49588.500000\n","max      199960.000000\n","Name: incomeUSD, dtype: float64"]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","metadata":{"id":"Ks-OBjCVDnsK"},"source":["We see that the income ranges from 20,002 to 199,960. How about making three categories: Low, medium, and high? If we are building 3 groups, we need 4 edges of intervals (**BINS**):\n","\n","\n","<img src =\"https://github.com/shstreuber/Data-Mining/blob/master/images/3bins.jpg?raw=true\">\n","\n","* small — (edge1, edge2)\n","* medium — (edge2, edge3)\n","* high — (edge3, edge4)\n","\n","We can use the linspace() function of the numpy package to calculate the 4 bins, equally distributed."]},{"cell_type":"code","metadata":{"id":"T64NDhl2ENpf","executionInfo":{"status":"error","timestamp":1708563512089,"user_tz":300,"elapsed":168,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"86d9c5c3-1e79-4527-a6db-87fc8ecddfb3","colab":{"base_uri":"https://localhost:8080/","height":158}},"source":["bins = np.linspace(adult.incomeUSD.min(),adult.incomeUSD.max(),4)\n","bins"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'np' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-c595d9193c4a>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mbins\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0madult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mincomeUSD\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0madult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mincomeUSD\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'np' is not defined"]}]},{"cell_type":"code","source":["bins = np.linspace(adult.incomeUSD.min(),adult.incomeUSD.max(),4)\n","bins"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aUI3UwfTAaPq","executionInfo":{"status":"ok","timestamp":1706159246216,"user_tz":300,"elapsed":252,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"6d7b0b45-a253-48fa-90ef-7653662c9934"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 20002.,  79988., 139974., 199960.])"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","metadata":{"id":"Do8EHOXaHgzB"},"source":["Pandas has calculated the following cutoffs:\n","* Group 1: 20,002.00000 to 79,988\n","* Group 2: 79,988 to 139,974\n","* Group 3: 139,974 to 199,960\n","\n","Now we define the three labels (small, medium, high) for these three groups:"]},{"cell_type":"code","metadata":{"id":"BVpVkXFiHtCJ"},"source":["labels = ['small', 'medium', 'high']"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["labels = ['small', 'medium', 'high']"],"metadata":{"id":"cZ9DG6DLBGqW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"K7ca50_SH2oI"},"source":["We can use the cut() function to convert the numeric values of incomeUSD into the categorical values of small, medium, and high. We need to specify the bins and the labels. In addition, we set the parameter include_lowest to True in order to include also the minimum value. In order not to change our original dataset, we'll create an adult3 backup dataset:"]},{"cell_type":"code","metadata":{"id":"A2wS6iYGISuO"},"source":["adult3= adult\n","adult3['bins'] = pd.cut(adult3['incomeUSD'], bins=bins, labels=labels, include_lowest=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3= adult\n","adult3['bins'] = pd.cut(adult3['incomeUSD'], bins=bins, labels=labels, include_lowest=True)"],"metadata":{"id":"FVvtVC8nBsWy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"XpftY9yYJKae"},"source":["This gives us the new 'bins' attribute at the end of our adult3 dataframe:"]},{"cell_type":"code","metadata":{"id":"QI3XNXFBKS8-","colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"status":"ok","timestamp":1706159927235,"user_tz":300,"elapsed":253,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"f630d445-77aa-4743-b89b-56d1b9bc31dc"},"source":["adult3.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age   workclass  education  educationyears       maritalstatus  \\\n","0   39  Government  Bachelors              13       Never-married   \n","1   50        Self  Bachelors              13  Married-civ-spouse   \n","2   38        Self    HS-grad               9            Divorced   \n","3   53        Self       11th               7  Married-civ-spouse   \n","4   28        Self  Bachelors              13  Married-civ-spouse   \n","\n","          occupation   relationship   race     sex  hoursperweek  \\\n","0       Adm-clerical  Not-in-family  White    Male            40   \n","1    Exec-managerial        Husband  White    Male            13   \n","2  Handlers-cleaners  Not-in-family  White    Male            40   \n","3  Handlers-cleaners        Husband  Black    Male            40   \n","4     Prof-specialty           Wife  Black  Female            40   \n","\n","   nativecountry  incomeUSD  race_num   bins  \n","0  United-States      43747         4  small  \n","1  United-States      38907         4  small  \n","2  United-States      25055         4  small  \n","3  United-States      26733         2  small  \n","4           Cuba      23429         2  small  "],"text/html":["\n","  <div id=\"df-b719ab41-64e6-489a-a209-b6bc9e362267\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","      <th>race_num</th>\n","      <th>bins</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>Government</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","      <td>4</td>\n","      <td>small</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","      <td>4</td>\n","      <td>small</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Self</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>25055</td>\n","      <td>4</td>\n","      <td>small</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Self</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>26733</td>\n","      <td>2</td>\n","      <td>small</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Self</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>23429</td>\n","      <td>2</td>\n","      <td>small</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b719ab41-64e6-489a-a209-b6bc9e362267')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b719ab41-64e6-489a-a209-b6bc9e362267 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b719ab41-64e6-489a-a209-b6bc9e362267');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-36c4a108-a7a7-4741-b31a-9cd67511d1f9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-36c4a108-a7a7-4741-b31a-9cd67511d1f9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-36c4a108-a7a7-4741-b31a-9cd67511d1f9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":114}]},{"cell_type":"markdown","metadata":{"id":"dGp6hc_2KeKe"},"source":["We can now use groupby() on this new 'bins' attribute to count the data in each of these categories:"]},{"cell_type":"code","metadata":{"id":"-PL_FSOjJWIk"},"source":["adult3.groupby(['bins']).count()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3.groupby(['bins']).count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"ui4U_F0eDsIj","executionInfo":{"status":"ok","timestamp":1706159980858,"user_tz":300,"elapsed":372,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"a9a607e7-21fd-43ac-bf6a-38486d9f8851"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          age  workclass  education  educationyears  maritalstatus  \\\n","bins                                                                 \n","small   20230      20230      20230           20230          20230   \n","medium   2450       2450       2450            2450           2450   \n","high     2320       2320       2320            2320           2320   \n","\n","        occupation  relationship   race    sex  hoursperweek  nativecountry  \\\n","bins                                                                          \n","small        20230         20230  20230  20230         20230          20230   \n","medium        2450          2450   2450   2450          2450           2450   \n","high          2320          2320   2320   2320          2320           2320   \n","\n","        incomeUSD  race_num  \n","bins                         \n","small       20230     20230  \n","medium       2450      2450  \n","high         2320      2320  "],"text/html":["\n","  <div id=\"df-b1df24c4-bff6-4647-9675-48b87833db79\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","      <th>race_num</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>small</th>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","      <td>20230</td>\n","    </tr>\n","    <tr>\n","      <th>medium</th>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","      <td>2450</td>\n","    </tr>\n","    <tr>\n","      <th>high</th>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","      <td>2320</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1df24c4-bff6-4647-9675-48b87833db79')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1df24c4-bff6-4647-9675-48b87833db79 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1df24c4-bff6-4647-9675-48b87833db79');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2a778d43-645c-43f6-83f3-7404b0eba6c0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a778d43-645c-43f6-83f3-7404b0eba6c0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2a778d43-645c-43f6-83f3-7404b0eba6c0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":116}]},{"cell_type":"markdown","metadata":{"id":"u3cyUciNL7nn"},"source":["We can even plot them in a histogram:"]},{"cell_type":"code","source":["plt.hist(adult3.bins, bins=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"HwYyM72KD_ym","executionInfo":{"status":"ok","timestamp":1706160104228,"user_tz":300,"elapsed":652,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"02147418-4457-4b80-f130-5ed51427defe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([20230.,  2450.,  2320.]),\n"," array([0.        , 0.66666667, 1.33333333, 2.        ]),\n"," <BarContainer object of 3 artists>)"]},"metadata":{},"execution_count":120},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"DbXIIiasMKPb"},"source":["Let's put our **CRITICAL THINKING** hats on: The cutoffs for the bins that we have calculated were:\n","* Group 1: 20,002.00000 to 79,988\n","* Group 2: 79,988 to 139,974\n","* Group 3: 139,974 to 199,960\n","\n","What we are seeing in the histogram is that a huge majority of our datapoints falls into the \"small\" category, so below 79,988, whereas a much smaller number falls into the medium and high categories.\n","\n","Are these bins useful? Not really. The only thing they show us is that we have a whole lot of poor people in our dataset. Let's go back to the 5-number summary:"]},{"cell_type":"code","metadata":{"id":"7H-OPphgNjLf"},"source":["adult3.incomeUSD.describe()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3.incomeUSD.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OrPsuIigFNyw","executionInfo":{"status":"ok","timestamp":1706160368421,"user_tz":300,"elapsed":270,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"acb7fad6-2682-4573-d0eb-d654bf1c39df"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     25000.000000\n","mean      56382.802560\n","std       44128.661114\n","min       20002.000000\n","25%       29963.750000\n","50%       39689.000000\n","75%       49588.500000\n","max      199960.000000\n","Name: incomeUSD, dtype: float64"]},"metadata":{},"execution_count":132}]},{"cell_type":"markdown","metadata":{"id":"U7L7lvgmAP4O"},"source":["###**Bucketing**\n","We see that the income ranges from 20,002 to 199,960, with a median at $39,689. That's not even a fifth of the top salary! Such a low median means that 50% of the people in our dataset make less than 39,732 while the remaining 50% inhabit the range from 39,689 to 199,960. In fact, only 25% of people earn between 49,588 (Q3) and the top salary. Wouldn't it be interesting to see how many earners we have in the top range, between, say 150,000 and 199,000?\n","\n","That's where **BUCKETS** come in.\n","\n","With buckets, you set the interval cutoffs manually. So, how about we make 5 buckets:\n","* poor (20002 to the median of 39689)\n","* low-wage-earners (median of 39689 to Q3 aka 49588)\n","* middle-class (49588 to 79988 (which was the previous Group 2 cutoff))\n","* rich (79988 to 150000)\n","* super-rich (150000 to 199960)\n","\n","<img src = \"https://github.com/shstreuber/Data-Mining/blob/master/images/5buckets_named_diff.jpg?raw=true\">\n","\n","You're probably noticing that these buckets aren't the same size. With bucketing, that's not the point. We get to make the cutoffs.\n","\n","Now, let's code this.\n"]},{"cell_type":"code","metadata":{"id":"8M4MNCv_PwHC"},"source":["# Setting up our 5 buckets and their labels\n","buckets = [ 20002, 39689, 49588, 79988, 150000, 199960 ]\n","bucketlabels = ['poor', 'low-wage-earners', 'middle-class', 'rich', 'super-rich']\n","\n","# Using cut() to separate data into the buckets we have built\n","adult3['buckets'] = pd.cut(adult3['incomeUSD'] , bins=buckets, labels=bucketlabels, include_lowest=True)\n","\n","# Check if we have the new attribute 'buckets' at the end of our dataset\n","adult3.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["buckets = [20002,39689,49588,79988,150000,199960]\n","bucketlabels = ['poor', 'low-wage-earners', 'middle-class', 'rich', 'super-rich']\n","adult3['buckets'] =pd.cut(adult3['incomeUSD'], bins=buckets, labels=bucketlabels, include_lowest=True)\n","adult3.head()"],"metadata":{"id":"t2wmr1HXGZ7U","executionInfo":{"status":"ok","timestamp":1706233948786,"user_tz":300,"elapsed":148,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"colab":{"base_uri":"https://localhost:8080/","height":330},"outputId":"e0bd4766-9e8b-40e1-fcea-390f52bacc34"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age         workclass  education  educationyears       maritalstatus  \\\n","0   39         State-gov  Bachelors              13       Never-married   \n","1   50  Self-emp-not-inc  Bachelors              13  Married-civ-spouse   \n","2   38           Private    HS-grad               9            Divorced   \n","3   53           Private       11th               7  Married-civ-spouse   \n","4   28           Private  Bachelors              13  Married-civ-spouse   \n","\n","          occupation   relationship   race     sex  hoursperweek  \\\n","0       Adm-clerical  Not-in-family  White    Male            40   \n","1    Exec-managerial        Husband  White    Male            13   \n","2  Handlers-cleaners  Not-in-family  White    Male            40   \n","3  Handlers-cleaners        Husband  Black    Male            40   \n","4     Prof-specialty           Wife  Black  Female            40   \n","\n","   nativecountry  incomeUSD           buckets  \n","0  United-States      43747  low-wage-earners  \n","1  United-States      38907              poor  \n","2  United-States      25055              poor  \n","3  United-States      26733              poor  \n","4           Cuba      23429              poor  "],"text/html":["\n","  <div id=\"df-54187679-e41e-4d0e-aee3-a37350a0b861\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","      <th>buckets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","      <td>low-wage-earners</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>25055</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>26733</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>23429</td>\n","      <td>poor</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54187679-e41e-4d0e-aee3-a37350a0b861')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54187679-e41e-4d0e-aee3-a37350a0b861 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54187679-e41e-4d0e-aee3-a37350a0b861');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-914ea8d0-3777-4bf4-bd07-7b93759d9f3c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-914ea8d0-3777-4bf4-bd07-7b93759d9f3c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-914ea8d0-3777-4bf4-bd07-7b93759d9f3c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"IrrOUHnJRpzv"},"source":["# Checking the contents of our buckets\n","adult3.groupby(['buckets']).count()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3.groupby(['buckets']).count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":327},"id":"2te0tmAQeGBF","executionInfo":{"status":"ok","timestamp":1706234027912,"user_tz":300,"elapsed":138,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"8a2e4b12-8972-48d5-bc12-4b045c59fd85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    age  workclass  education  educationyears  maritalstatus  \\\n","buckets                                                                        \n","poor              12501      12501      12501           12501          12501   \n","low-wage-earners   6249       6249       6249            6249           6249   \n","middle-class       1480       1480       1480            1480           1480   \n","rich               2818       2818       2818            2818           2818   \n","super-rich         1952       1952       1952            1952           1952   \n","\n","                  occupation  relationship   race    sex  hoursperweek  \\\n","buckets                                                                  \n","poor                   12501         12501  12501  12501         12501   \n","low-wage-earners        6249          6249   6249   6249          6249   \n","middle-class            1480          1480   1480   1480          1480   \n","rich                    2818          2818   2818   2818          2818   \n","super-rich              1952          1952   1952   1952          1952   \n","\n","                  nativecountry  incomeUSD  \n","buckets                                     \n","poor                      12501      12501  \n","low-wage-earners           6249       6249  \n","middle-class               1480       1480  \n","rich                       2818       2818  \n","super-rich                 1952       1952  "],"text/html":["\n","  <div id=\"df-6a1861be-2706-4955-acda-ad04bd3d9565\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","    </tr>\n","    <tr>\n","      <th>buckets</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>poor</th>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","      <td>12501</td>\n","    </tr>\n","    <tr>\n","      <th>low-wage-earners</th>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","      <td>6249</td>\n","    </tr>\n","    <tr>\n","      <th>middle-class</th>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","      <td>1480</td>\n","    </tr>\n","    <tr>\n","      <th>rich</th>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","      <td>2818</td>\n","    </tr>\n","    <tr>\n","      <th>super-rich</th>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","      <td>1952</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a1861be-2706-4955-acda-ad04bd3d9565')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6a1861be-2706-4955-acda-ad04bd3d9565 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6a1861be-2706-4955-acda-ad04bd3d9565');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6aaef195-e3bc-4457-8b58-16c38af0a81d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6aaef195-e3bc-4457-8b58-16c38af0a81d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6aaef195-e3bc-4457-8b58-16c38af0a81d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":[],"metadata":{"id":"o_64Q_-3eFhu"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"C0gv6VPHRY2y"},"source":["# Plotting the distribution now\n","plt.hist(adult3['buckets'], bins=3)\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.hist(adult3['buckets'], bins=5)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"tv1nHF5TeebX","executionInfo":{"status":"ok","timestamp":1706234308392,"user_tz":300,"elapsed":659,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"d38d9e66-7890-4959-8089-6f586f033496"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"YopuAWo7TPuw"},"source":["###**CRITICAL THINKING MOMENT**\n","As you can see, bucketing gives us much better information about our dataset, but we needed to use binning to point us in the right direction! Now, look at these three bucket cutoffs again:\n","\n","* poor (20002 to the median of 39689)\n","* rich (79988 to 150000)\n","* super-rich (150000 to 199960)\n","\n","We are seeing that the number of poor people is still vastly bigger than the numbers of rich and super-rich people. **AND** we see that most of the poverty is concentrated between 20002 and 39689--that's a range of less than 20000--whereas the range of rich to super-rich income is much larger, from 79988 to 199960--that's roughly 120000!\n","<center>\n","<img src = \"https://thumbs.dreamstime.com/z/mind-blown-emoji-exploding-head-emoticon-white-background-d-rendering-219279605.jpg?w=300\">\n","</center>\n","\n","**DISCLAIMER**: Of course, we are evaluating the income from an American perspective, even though the numbers come from countries all over the world, and we are not looking at buying power by country, at all. For example, $39,689 buys much more in a country like Poland than it does in the US. So, to get more balanced insights, we would have to do much more investigating!"]},{"cell_type":"markdown","metadata":{"id":"u6xIuxsFWacO"},"source":["##**4.3 Normalization and Standardization**\n","A third type of Discretization, which will become critical when we talk about Neural Networks, helps us compare the values inside numeric attributes in a dataset by putting them all on the same scale.\n","\n","Below, I will show you the most popular method for normalization, with the MixMaxScaler from the new-to-you scikit-learn package, which transforms values to a scale from 0 to 1. Then, I will show you two methods for standardization: A basic pandas method and the StandardScaler from the--you guessed it--scikit-learn package\n","\n","**CRITICAL THINKING MOMENT**\n","Which data would we want to compare? Typically the ones that can have meaning for one another, like the ones with the same units. So here, we will use age and educationyears to normalize because both are in the same unit: Years.\n","\n","First, we will pull out these two numeric attributes into their own dataframe. That will make our processing faster and easier"]},{"cell_type":"code","metadata":{"id":"zqV3dLuQhMXK"},"source":["adult_years = adult.iloc[:,[0,3]]\n","adult_years.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult_years = adult.iloc[:,[0,3]]\n","adult_years.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ajX0UtjEiAC_","executionInfo":{"status":"ok","timestamp":1706235044478,"user_tz":300,"elapsed":126,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"0a8b7f91-34d7-46b5-8631-81b777648b35"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  educationyears\n","0   39              13\n","1   50              13\n","2   38               9\n","3   53               7\n","4   28              13"],"text/html":["\n","  <div id=\"df-4765df68-10f3-424b-a91f-c9c2e6a24566\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>educationyears</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4765df68-10f3-424b-a91f-c9c2e6a24566')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4765df68-10f3-424b-a91f-c9c2e6a24566 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4765df68-10f3-424b-a91f-c9c2e6a24566');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-89e7b64c-ad79-46c9-aa7f-960b0cb727fd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89e7b64c-ad79-46c9-aa7f-960b0cb727fd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-89e7b64c-ad79-46c9-aa7f-960b0cb727fd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"zrzeVmNyj7LH"},"source":["# Better safe than sorry! Let's check the dataypes.\n","adult_years.dtypes"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult_years.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g7SUiLLuiL5P","executionInfo":{"status":"ok","timestamp":1706235067285,"user_tz":300,"elapsed":193,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"d952cc19-8fde-4693-8f85-51b84247becc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age               int64\n","educationyears    int64\n","dtype: object"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"dyk05eojo0V0"},"source":["###**Normalization with scikit-learn**\n","Scikit-learn is a scientific package that allows us to do biased estimating, based on how you tell the algorithm to calculate the normalization range. Some data scientists prefer the MixMax method over the pandas method because it gives more control over how to scale the attributes. The most popular approach is [MinMaxScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html), which scales and translates each attribute individually such that it falls between zero and one."]},{"cell_type":"code","metadata":{"id":"yN5my7TOqdkl","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1706236165781,"user_tz":300,"elapsed":140,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"e9a623db-ba02-43bb-a1bd-61620f26f959"},"source":["# Normalization with MinMaxScaler\n","\n","from sklearn import preprocessing # the package\n","\n","adult_years1 = adult_years # backing up my dataframe--you never know!\n","x = adult_years1.values # pulling out just the array values\n","\n","# Now we are using the scaler\n","min_max_scaler = preprocessing.MinMaxScaler()\n","\n","# Check the link above for more explanation of this line\n","x_scaled = min_max_scaler.fit_transform(x)\n","\n","adult_years1 = pd.DataFrame(x_scaled)\n","\n","adult_years1.head() # We should now be seeing all values between 0 and 1."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          0         1\n","0  0.301370  0.800000\n","1  0.452055  0.800000\n","2  0.287671  0.533333\n","3  0.493151  0.400000\n","4  0.150685  0.800000"],"text/html":["\n","  <div id=\"df-924eda7f-383c-4a4e-b968-f4be3e7e2ccd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.301370</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.452055</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.287671</td>\n","      <td>0.533333</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.493151</td>\n","      <td>0.400000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.150685</td>\n","      <td>0.800000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-924eda7f-383c-4a4e-b968-f4be3e7e2ccd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-924eda7f-383c-4a4e-b968-f4be3e7e2ccd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-924eda7f-383c-4a4e-b968-f4be3e7e2ccd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c32a812d-22ee-4eb8-bc0f-341ae517f080\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c32a812d-22ee-4eb8-bc0f-341ae517f080')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c32a812d-22ee-4eb8-bc0f-341ae517f080 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["from sklearn import preprocessing\n","adult_years1 = adult_years\n","y = adult_years1.values\n","\n","min_max_scaler = preprocessing.MinMaxScaler()\n","\n","y_scaled = min_max_scaler.fit_transform(y)\n","\n","adult_years1 = pd.DataFrame(y_scaled)\n","\n","adult_years1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"VV1SXo_Dizyr","executionInfo":{"status":"ok","timestamp":1706236258759,"user_tz":300,"elapsed":177,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"102ae86a-5525-49b1-9941-8e951dfd2aed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              0         1\n","0      0.301370  0.800000\n","1      0.452055  0.800000\n","2      0.287671  0.533333\n","3      0.493151  0.400000\n","4      0.150685  0.800000\n","...         ...       ...\n","24995  0.328767  0.333333\n","24996  0.027397  0.533333\n","24997  0.219178  0.533333\n","24998  0.054795  0.600000\n","24999  0.109589  0.800000\n","\n","[25000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-27c8da9c-2a81-404d-bad3-a87fe5782c52\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.301370</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.452055</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.287671</td>\n","      <td>0.533333</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.493151</td>\n","      <td>0.400000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.150685</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24995</th>\n","      <td>0.328767</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>24996</th>\n","      <td>0.027397</td>\n","      <td>0.533333</td>\n","    </tr>\n","    <tr>\n","      <th>24997</th>\n","      <td>0.219178</td>\n","      <td>0.533333</td>\n","    </tr>\n","    <tr>\n","      <th>24998</th>\n","      <td>0.054795</td>\n","      <td>0.600000</td>\n","    </tr>\n","    <tr>\n","      <th>24999</th>\n","      <td>0.109589</td>\n","      <td>0.800000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>25000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27c8da9c-2a81-404d-bad3-a87fe5782c52')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27c8da9c-2a81-404d-bad3-a87fe5782c52 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27c8da9c-2a81-404d-bad3-a87fe5782c52');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5baf70ac-c7e4-4cfe-ac1e-f0c7b4ff43c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5baf70ac-c7e4-4cfe-ac1e-f0c7b4ff43c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5baf70ac-c7e4-4cfe-ac1e-f0c7b4ff43c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","metadata":{"id":"89rOe8CZuc0u"},"source":["###**Standardization with scikit-learn**\n","Standardization is typically when values are organized around the mean and divided by the standard deviation. The fastest approach here is the [StandardScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html) from scikit-learn."]},{"cell_type":"code","metadata":{"id":"RXaxU2zLtaAm","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1706237448110,"user_tz":300,"elapsed":153,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"fc251100-1db0-442e-ff02-6c4e3a286b0f"},"source":["# Standardization with StandardScaler\n","\n","from sklearn.preprocessing import StandardScaler # the package\n","\n","adult_years2 = adult_years # backing up my dataframe--you never know!\n","scaler = StandardScaler() # setting an abbreviation to make things easier\n","\n","#adult_years2 = scaler.fit_transform(adult_years2.to_numpy()) # if you want to add an extra transformation to a numpy array\n","adult_years2 = scaler.fit_transform(adult_years2)\n","\n","adult_years2 = pd.DataFrame(adult_years2)\n","adult_years2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          0         1\n","0  0.028718  1.141407\n","1  0.832371  1.141407\n","2 -0.044341 -0.422936\n","3  1.051550 -1.205107\n","4 -0.774935  1.141407"],"text/html":["\n","  <div id=\"df-ac005faa-7f4d-45db-975a-99e8a1c586cd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.028718</td>\n","      <td>1.141407</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.832371</td>\n","      <td>1.141407</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.044341</td>\n","      <td>-0.422936</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.051550</td>\n","      <td>-1.205107</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.774935</td>\n","      <td>1.141407</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac005faa-7f4d-45db-975a-99e8a1c586cd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ac005faa-7f4d-45db-975a-99e8a1c586cd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ac005faa-7f4d-45db-975a-99e8a1c586cd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cc3e7a1e-51f8-4186-988d-3a4bcd5d62c6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc3e7a1e-51f8-4186-988d-3a4bcd5d62c6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cc3e7a1e-51f8-4186-988d-3a4bcd5d62c6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","\n","adult_years2 = adult_years\n","scaler = StandardScaler()\n","adult_years2 = scaler.fit_transform(adult_years2)\n","adult_years2 = pd.DataFrame(adult_years2)\n","adult_years2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"lYK_DjjUpjgo","executionInfo":{"status":"ok","timestamp":1706237658103,"user_tz":300,"elapsed":278,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"afa3cbad-bf39-499a-f557-ec191020f848"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          0         1\n","0  0.028718  1.141407\n","1  0.832371  1.141407\n","2 -0.044341 -0.422936\n","3  1.051550 -1.205107\n","4 -0.774935  1.141407"],"text/html":["\n","  <div id=\"df-f63b680b-67dd-4edb-bf23-6e4e191bd12d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.028718</td>\n","      <td>1.141407</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.832371</td>\n","      <td>1.141407</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.044341</td>\n","      <td>-0.422936</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.051550</td>\n","      <td>-1.205107</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.774935</td>\n","      <td>1.141407</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f63b680b-67dd-4edb-bf23-6e4e191bd12d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f63b680b-67dd-4edb-bf23-6e4e191bd12d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f63b680b-67dd-4edb-bf23-6e4e191bd12d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-59ec76d3-68cc-4f0c-bf47-3ca169fdac10\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59ec76d3-68cc-4f0c-bf47-3ca169fdac10')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-59ec76d3-68cc-4f0c-bf47-3ca169fdac10 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","metadata":{"id":"uJZWOZTkfyma"},"source":["### **Standardization with pandas**\n","Using pandas for normalization is pretty straightforward: From each data value in an attribute, we subtract the mean and divide by the standard deviation. We do this row by row, so we specify axis=0. (axis=1 means column, remember?).\n","\n","Cycling through our data will require the lambda transformation we have seen in a previous module. To learn more about this lambda transformation, check [this link](https://www.analyticsvidhya.com/blog/2020/03/what-are-lambda-functions-in-python/)"]},{"cell_type":"code","metadata":{"id":"8DXl7KEygOh5"},"source":["adult_years3 = adult_years.apply(lambda x: (x-x.mean())/ x.std(), axis=0)\n","adult_years3.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult_years3 = adult_years.apply(lambda x: (x-x.mean())/x.std(), axis=0)\n","adult_years3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"v6Bt7470sgBe","executionInfo":{"status":"ok","timestamp":1706237905031,"user_tz":300,"elapsed":146,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"1c446edb-2673-49c3-d597-ec128d021eaa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        age  educationyears\n","0  0.028718        1.141384\n","1  0.832355        1.141384\n","2 -0.044340       -0.422927\n","3  1.051529       -1.205083\n","4 -0.774920        1.141384"],"text/html":["\n","  <div id=\"df-c1ec6470-06be-45f4-ae23-231f7232eb9b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>educationyears</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.028718</td>\n","      <td>1.141384</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.832355</td>\n","      <td>1.141384</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.044340</td>\n","      <td>-0.422927</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.051529</td>\n","      <td>-1.205083</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.774920</td>\n","      <td>1.141384</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1ec6470-06be-45f4-ae23-231f7232eb9b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c1ec6470-06be-45f4-ae23-231f7232eb9b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c1ec6470-06be-45f4-ae23-231f7232eb9b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0cd017c0-9d26-48c8-a623-caf8a0104f88\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0cd017c0-9d26-48c8-a623-caf8a0104f88')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0cd017c0-9d26-48c8-a623-caf8a0104f88 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","metadata":{"id":"8HiBqlMHyAPf"},"source":["**OH! WAIT! WHAT!!!!???**\n","\n","Compare these values to the output for the StandardScaler--do you notice anything?\n"]},{"cell_type":"markdown","metadata":{"id":"eTOebMxpnRac"},"source":["### **The Big Picture**\n","If you don't want to build a separate dataframe, that's ok, but it takes up more processing power. You will have to work with iloc to tell Python which columns to transform (I am using adult3 below with the pandas transformation just because we did that last and because I don't want to break the original adult dataframe here)"]},{"cell_type":"code","metadata":{"id":"V8j5ifKNni2K"},"source":["adult3.iloc[:,[0,3]] = adult.iloc[:,[0,3]].apply(lambda x: (x-x.mean())/ x.std(), axis=0)\n","adult3.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["adult3.iloc[:,[0,3]] = adult.iloc[:,[0,3]].apply(lambda x: (x-x.mean())/x.std(), axis=0)\n","adult3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":330},"id":"kO3wsB1-yhle","executionInfo":{"status":"ok","timestamp":1706239472784,"user_tz":300,"elapsed":222,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"3ec9bf81-d8f9-4c1e-9392-de4f63fe12b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        age         workclass  education  educationyears       maritalstatus  \\\n","0  0.028718         State-gov  Bachelors        1.141384       Never-married   \n","1  0.832355  Self-emp-not-inc  Bachelors        1.141384  Married-civ-spouse   \n","2 -0.044340           Private    HS-grad       -0.422927            Divorced   \n","3  1.051529           Private       11th       -1.205083  Married-civ-spouse   \n","4 -0.774920           Private  Bachelors        1.141384  Married-civ-spouse   \n","\n","          occupation   relationship   race     sex  hoursperweek  \\\n","0       Adm-clerical  Not-in-family  White    Male            40   \n","1    Exec-managerial        Husband  White    Male            13   \n","2  Handlers-cleaners  Not-in-family  White    Male            40   \n","3  Handlers-cleaners        Husband  Black    Male            40   \n","4     Prof-specialty           Wife  Black  Female            40   \n","\n","   nativecountry  incomeUSD           buckets  \n","0  United-States      43747  low-wage-earners  \n","1  United-States      38907              poor  \n","2  United-States      25055              poor  \n","3  United-States      26733              poor  \n","4           Cuba      23429              poor  "],"text/html":["\n","  <div id=\"df-0045fe9d-3e19-4912-99a3-795fb6254139\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","      <th>buckets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.028718</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>1.141384</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","      <td>low-wage-earners</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.832355</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>1.141384</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.044340</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>-0.422927</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>25055</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.051529</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>-1.205083</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>26733</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.774920</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>1.141384</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>23429</td>\n","      <td>poor</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0045fe9d-3e19-4912-99a3-795fb6254139')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0045fe9d-3e19-4912-99a3-795fb6254139 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0045fe9d-3e19-4912-99a3-795fb6254139');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb64cf84-3006-4f24-9dff-05419093c668\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb64cf84-3006-4f24-9dff-05419093c668')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb64cf84-3006-4f24-9dff-05419093c668 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","metadata":{"id":"6svM7QYuEGSd"},"source":["##**Your Turn**\n","Now apply the MinMaxScaler to the age and educationyears attribute throughout the ENTIRE adult dataset (back it up as adult4 so you can always quickly replace it). For this, you will combine code from the MinMaxScaler normalization with the code directly above that applies the transformation to specific columns/ attributes/ dimensions/ features in the dataset."]},{"cell_type":"code","metadata":{"id":"uBa1eNNMEzsX","colab":{"base_uri":"https://localhost:8080/","height":330},"executionInfo":{"status":"ok","timestamp":1706239324223,"user_tz":300,"elapsed":140,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"}},"outputId":"71d8610b-6044-461c-9351-fbfa57708275"},"source":["adult4 = adult\n","#normalization\n","x = adult4.iloc[:,[0,3]].values\n","min_max_scaler = preprocessing.MinMaxScaler()\n","x_scaled = min_max_scaler.fit_transform(x)\n","adult4.iloc[:,[0,3]] = pd.DataFrame(x_scaled)\n","adult4.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        age         workclass  education  educationyears       maritalstatus  \\\n","0  0.301370         State-gov  Bachelors        0.800000       Never-married   \n","1  0.452055  Self-emp-not-inc  Bachelors        0.800000  Married-civ-spouse   \n","2  0.287671           Private    HS-grad        0.533333            Divorced   \n","3  0.493151           Private       11th        0.400000  Married-civ-spouse   \n","4  0.150685           Private  Bachelors        0.800000  Married-civ-spouse   \n","\n","          occupation   relationship   race     sex  hoursperweek  \\\n","0       Adm-clerical  Not-in-family  White    Male            40   \n","1    Exec-managerial        Husband  White    Male            13   \n","2  Handlers-cleaners  Not-in-family  White    Male            40   \n","3  Handlers-cleaners        Husband  Black    Male            40   \n","4     Prof-specialty           Wife  Black  Female            40   \n","\n","   nativecountry  incomeUSD           buckets  \n","0  United-States      43747  low-wage-earners  \n","1  United-States      38907              poor  \n","2  United-States      25055              poor  \n","3  United-States      26733              poor  \n","4           Cuba      23429              poor  "],"text/html":["\n","  <div id=\"df-2f9debba-b08d-4412-bbb0-58f624dcf6ae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>nativecountry</th>\n","      <th>incomeUSD</th>\n","      <th>buckets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.301370</td>\n","      <td>State-gov</td>\n","      <td>Bachelors</td>\n","      <td>0.800000</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>43747</td>\n","      <td>low-wage-earners</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.452055</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>Bachelors</td>\n","      <td>0.800000</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>38907</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.287671</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>0.533333</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>25055</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.493151</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>0.400000</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>26733</td>\n","      <td>poor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.150685</td>\n","      <td>Private</td>\n","      <td>Bachelors</td>\n","      <td>0.800000</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>23429</td>\n","      <td>poor</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f9debba-b08d-4412-bbb0-58f624dcf6ae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2f9debba-b08d-4412-bbb0-58f624dcf6ae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2f9debba-b08d-4412-bbb0-58f624dcf6ae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3620b6a8-931a-4610-a7f1-b52d1b0a10ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3620b6a8-931a-4610-a7f1-b52d1b0a10ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3620b6a8-931a-4610-a7f1-b52d1b0a10ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":78}]}]}